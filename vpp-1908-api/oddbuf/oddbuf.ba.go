// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// source: /usr/share/vpp/api/plugins/oddbuf.api.json

/*
Package oddbuf is a generated VPP binary API for 'oddbuf' module.

It consists of:
	  1 alias
	  2 messages
	  1 service
*/
package oddbuf

import (
	bytes "bytes"
	context "context"
	api "git.fd.io/govpp.git/api"
	struc "github.com/lunixbochs/struc"
	io "io"
	strconv "strconv"
)

const (
	// ModuleName is the name of this module.
	ModuleName = "oddbuf"
	// APIVersion is the API version of this module.
	APIVersion = "0.1.0"
	// VersionCrc is the CRC of this module.
	VersionCrc = 0x723de524
)

// InterfaceIndex represents VPP binary API alias 'interface_index'.
type InterfaceIndex uint32

// OddbufEnableDisable represents VPP binary API message 'oddbuf_enable_disable'.
type OddbufEnableDisable struct {
	EnableDisable bool
	SwIfIndex     InterfaceIndex
}

func (*OddbufEnableDisable) GetMessageName() string {
	return "oddbuf_enable_disable"
}
func (*OddbufEnableDisable) GetCrcString() string {
	return "3865946c"
}
func (*OddbufEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// OddbufEnableDisableReply represents VPP binary API message 'oddbuf_enable_disable_reply'.
type OddbufEnableDisableReply struct {
	Retval int32
}

func (*OddbufEnableDisableReply) GetMessageName() string {
	return "oddbuf_enable_disable_reply"
}
func (*OddbufEnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*OddbufEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func init() {
	api.RegisterMessage((*OddbufEnableDisable)(nil), "oddbuf.OddbufEnableDisable")
	api.RegisterMessage((*OddbufEnableDisableReply)(nil), "oddbuf.OddbufEnableDisableReply")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*OddbufEnableDisable)(nil),
		(*OddbufEnableDisableReply)(nil),
	}
}

// RPCService represents RPC service API for oddbuf module.
type RPCService interface {
	OddbufEnableDisable(ctx context.Context, in *OddbufEnableDisable) (*OddbufEnableDisableReply, error)
}

type serviceClient struct {
	ch api.Channel
}

func NewServiceClient(ch api.Channel) RPCService {
	return &serviceClient{ch}
}

func (c *serviceClient) OddbufEnableDisable(ctx context.Context, in *OddbufEnableDisable) (*OddbufEnableDisableReply, error) {
	out := new(OddbufEnableDisableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion1 // please upgrade the GoVPP api package

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = bytes.NewBuffer
var _ = context.Background
var _ = io.Copy
var _ = strconv.Itoa
var _ = struc.Pack
