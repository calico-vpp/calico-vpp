// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// source: /usr/share/vpp/api/core/l2tp.api.json

/*
Package l2tp is a generated VPP binary API for 'l2tp' module.

It consists of:
	 10 messages
	  5 services
*/
package l2tp

import (
	bytes "bytes"
	context "context"
	api "git.fd.io/govpp.git/api"
	struc "github.com/lunixbochs/struc"
	io "io"
	strconv "strconv"
)

const (
	// ModuleName is the name of this module.
	ModuleName = "l2tp"
	// APIVersion is the API version of this module.
	APIVersion = "1.0.0"
	// VersionCrc is the CRC of this module.
	VersionCrc = 0xbee4b108
)

// L2tpv3CreateTunnel represents VPP binary API message 'l2tpv3_create_tunnel'.
type L2tpv3CreateTunnel struct {
	ClientAddress     []byte `struc:"[16]byte"`
	OurAddress        []byte `struc:"[16]byte"`
	IsIPv6            uint8
	LocalSessionID    uint32
	RemoteSessionID   uint32
	LocalCookie       uint64
	RemoteCookie      uint64
	L2SublayerPresent uint8
	EncapVrfID        uint32
}

func (*L2tpv3CreateTunnel) GetMessageName() string {
	return "l2tpv3_create_tunnel"
}
func (*L2tpv3CreateTunnel) GetCrcString() string {
	return "11bafa9f"
}
func (*L2tpv3CreateTunnel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// L2tpv3CreateTunnelReply represents VPP binary API message 'l2tpv3_create_tunnel_reply'.
type L2tpv3CreateTunnelReply struct {
	Retval    int32
	SwIfIndex uint32
}

func (*L2tpv3CreateTunnelReply) GetMessageName() string {
	return "l2tpv3_create_tunnel_reply"
}
func (*L2tpv3CreateTunnelReply) GetCrcString() string {
	return "fda5941f"
}
func (*L2tpv3CreateTunnelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// L2tpv3InterfaceEnableDisable represents VPP binary API message 'l2tpv3_interface_enable_disable'.
type L2tpv3InterfaceEnableDisable struct {
	EnableDisable uint8
	SwIfIndex     uint32
}

func (*L2tpv3InterfaceEnableDisable) GetMessageName() string {
	return "l2tpv3_interface_enable_disable"
}
func (*L2tpv3InterfaceEnableDisable) GetCrcString() string {
	return "57298519"
}
func (*L2tpv3InterfaceEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// L2tpv3InterfaceEnableDisableReply represents VPP binary API message 'l2tpv3_interface_enable_disable_reply'.
type L2tpv3InterfaceEnableDisableReply struct {
	Retval int32
}

func (*L2tpv3InterfaceEnableDisableReply) GetMessageName() string {
	return "l2tpv3_interface_enable_disable_reply"
}
func (*L2tpv3InterfaceEnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*L2tpv3InterfaceEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// L2tpv3SetLookupKey represents VPP binary API message 'l2tpv3_set_lookup_key'.
type L2tpv3SetLookupKey struct {
	Key uint8
}

func (*L2tpv3SetLookupKey) GetMessageName() string {
	return "l2tpv3_set_lookup_key"
}
func (*L2tpv3SetLookupKey) GetCrcString() string {
	return "d7736d45"
}
func (*L2tpv3SetLookupKey) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// L2tpv3SetLookupKeyReply represents VPP binary API message 'l2tpv3_set_lookup_key_reply'.
type L2tpv3SetLookupKeyReply struct {
	Retval int32
}

func (*L2tpv3SetLookupKeyReply) GetMessageName() string {
	return "l2tpv3_set_lookup_key_reply"
}
func (*L2tpv3SetLookupKeyReply) GetCrcString() string {
	return "e8d4e804"
}
func (*L2tpv3SetLookupKeyReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// L2tpv3SetTunnelCookies represents VPP binary API message 'l2tpv3_set_tunnel_cookies'.
type L2tpv3SetTunnelCookies struct {
	SwIfIndex       uint32
	NewLocalCookie  uint64
	NewRemoteCookie uint64
}

func (*L2tpv3SetTunnelCookies) GetMessageName() string {
	return "l2tpv3_set_tunnel_cookies"
}
func (*L2tpv3SetTunnelCookies) GetCrcString() string {
	return "b0ce1366"
}
func (*L2tpv3SetTunnelCookies) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// L2tpv3SetTunnelCookiesReply represents VPP binary API message 'l2tpv3_set_tunnel_cookies_reply'.
type L2tpv3SetTunnelCookiesReply struct {
	Retval int32
}

func (*L2tpv3SetTunnelCookiesReply) GetMessageName() string {
	return "l2tpv3_set_tunnel_cookies_reply"
}
func (*L2tpv3SetTunnelCookiesReply) GetCrcString() string {
	return "e8d4e804"
}
func (*L2tpv3SetTunnelCookiesReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// SwIfL2tpv3TunnelDetails represents VPP binary API message 'sw_if_l2tpv3_tunnel_details'.
type SwIfL2tpv3TunnelDetails struct {
	SwIfIndex         uint32
	InterfaceName     []byte `struc:"[64]byte"`
	ClientAddress     []byte `struc:"[16]byte"`
	OurAddress        []byte `struc:"[16]byte"`
	LocalSessionID    uint32
	RemoteSessionID   uint32
	LocalCookie       []uint64 `struc:"[2]uint64"`
	RemoteCookie      uint64
	L2SublayerPresent uint8
}

func (*SwIfL2tpv3TunnelDetails) GetMessageName() string {
	return "sw_if_l2tpv3_tunnel_details"
}
func (*SwIfL2tpv3TunnelDetails) GetCrcString() string {
	return "7b22bb34"
}
func (*SwIfL2tpv3TunnelDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// SwIfL2tpv3TunnelDump represents VPP binary API message 'sw_if_l2tpv3_tunnel_dump'.
type SwIfL2tpv3TunnelDump struct{}

func (*SwIfL2tpv3TunnelDump) GetMessageName() string {
	return "sw_if_l2tpv3_tunnel_dump"
}
func (*SwIfL2tpv3TunnelDump) GetCrcString() string {
	return "51077d14"
}
func (*SwIfL2tpv3TunnelDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func init() {
	api.RegisterMessage((*L2tpv3CreateTunnel)(nil), "l2tp.L2tpv3CreateTunnel")
	api.RegisterMessage((*L2tpv3CreateTunnelReply)(nil), "l2tp.L2tpv3CreateTunnelReply")
	api.RegisterMessage((*L2tpv3InterfaceEnableDisable)(nil), "l2tp.L2tpv3InterfaceEnableDisable")
	api.RegisterMessage((*L2tpv3InterfaceEnableDisableReply)(nil), "l2tp.L2tpv3InterfaceEnableDisableReply")
	api.RegisterMessage((*L2tpv3SetLookupKey)(nil), "l2tp.L2tpv3SetLookupKey")
	api.RegisterMessage((*L2tpv3SetLookupKeyReply)(nil), "l2tp.L2tpv3SetLookupKeyReply")
	api.RegisterMessage((*L2tpv3SetTunnelCookies)(nil), "l2tp.L2tpv3SetTunnelCookies")
	api.RegisterMessage((*L2tpv3SetTunnelCookiesReply)(nil), "l2tp.L2tpv3SetTunnelCookiesReply")
	api.RegisterMessage((*SwIfL2tpv3TunnelDetails)(nil), "l2tp.SwIfL2tpv3TunnelDetails")
	api.RegisterMessage((*SwIfL2tpv3TunnelDump)(nil), "l2tp.SwIfL2tpv3TunnelDump")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*L2tpv3CreateTunnel)(nil),
		(*L2tpv3CreateTunnelReply)(nil),
		(*L2tpv3InterfaceEnableDisable)(nil),
		(*L2tpv3InterfaceEnableDisableReply)(nil),
		(*L2tpv3SetLookupKey)(nil),
		(*L2tpv3SetLookupKeyReply)(nil),
		(*L2tpv3SetTunnelCookies)(nil),
		(*L2tpv3SetTunnelCookiesReply)(nil),
		(*SwIfL2tpv3TunnelDetails)(nil),
		(*SwIfL2tpv3TunnelDump)(nil),
	}
}

// RPCService represents RPC service API for l2tp module.
type RPCService interface {
	DumpSwIfL2tpv3Tunnel(ctx context.Context, in *SwIfL2tpv3TunnelDump) (RPCService_DumpSwIfL2tpv3TunnelClient, error)
	L2tpv3CreateTunnel(ctx context.Context, in *L2tpv3CreateTunnel) (*L2tpv3CreateTunnelReply, error)
	L2tpv3InterfaceEnableDisable(ctx context.Context, in *L2tpv3InterfaceEnableDisable) (*L2tpv3InterfaceEnableDisableReply, error)
	L2tpv3SetLookupKey(ctx context.Context, in *L2tpv3SetLookupKey) (*L2tpv3SetLookupKeyReply, error)
	L2tpv3SetTunnelCookies(ctx context.Context, in *L2tpv3SetTunnelCookies) (*L2tpv3SetTunnelCookiesReply, error)
}

type serviceClient struct {
	ch api.Channel
}

func NewServiceClient(ch api.Channel) RPCService {
	return &serviceClient{ch}
}

func (c *serviceClient) DumpSwIfL2tpv3Tunnel(ctx context.Context, in *SwIfL2tpv3TunnelDump) (RPCService_DumpSwIfL2tpv3TunnelClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpSwIfL2tpv3TunnelClient{stream}
	return x, nil
}

type RPCService_DumpSwIfL2tpv3TunnelClient interface {
	Recv() (*SwIfL2tpv3TunnelDetails, error)
}

type serviceClient_DumpSwIfL2tpv3TunnelClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpSwIfL2tpv3TunnelClient) Recv() (*SwIfL2tpv3TunnelDetails, error) {
	m := new(SwIfL2tpv3TunnelDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) L2tpv3CreateTunnel(ctx context.Context, in *L2tpv3CreateTunnel) (*L2tpv3CreateTunnelReply, error) {
	out := new(L2tpv3CreateTunnelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) L2tpv3InterfaceEnableDisable(ctx context.Context, in *L2tpv3InterfaceEnableDisable) (*L2tpv3InterfaceEnableDisableReply, error) {
	out := new(L2tpv3InterfaceEnableDisableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) L2tpv3SetLookupKey(ctx context.Context, in *L2tpv3SetLookupKey) (*L2tpv3SetLookupKeyReply, error) {
	out := new(L2tpv3SetLookupKeyReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) L2tpv3SetTunnelCookies(ctx context.Context, in *L2tpv3SetTunnelCookies) (*L2tpv3SetTunnelCookiesReply, error) {
	out := new(L2tpv3SetTunnelCookiesReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion1 // please upgrade the GoVPP api package

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = bytes.NewBuffer
var _ = context.Background
var _ = io.Copy
var _ = strconv.Itoa
var _ = struc.Pack
