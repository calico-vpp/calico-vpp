// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// source: /usr/share/vpp/api/plugins/gbp.api.json

/*
Package gbp is a generated VPP binary API for 'gbp' module.

It consists of:
	 11 enums
	  7 aliases
	 20 types
	  1 union
	 48 messages
	 23 services
*/
package gbp

import (
	bytes "bytes"
	context "context"
	api "git.fd.io/govpp.git/api"
	struc "github.com/lunixbochs/struc"
	io "io"
	strconv "strconv"
)

const (
	// ModuleName is the name of this module.
	ModuleName = "gbp"
	// APIVersion is the API version of this module.
	APIVersion = "2.0.0"
	// VersionCrc is the CRC of this module.
	VersionCrc = 0xefc264aa
)

// AddressFamily represents VPP binary API enum 'address_family'.
type AddressFamily uint32

const (
	ADDRESS_IP4 AddressFamily = 0
	ADDRESS_IP6 AddressFamily = 1
)

var AddressFamily_name = map[uint32]string{
	0: "ADDRESS_IP4",
	1: "ADDRESS_IP6",
}

var AddressFamily_value = map[string]uint32{
	"ADDRESS_IP4": 0,
	"ADDRESS_IP6": 1,
}

func (x AddressFamily) String() string {
	s, ok := AddressFamily_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// GbpBridgeDomainFlags represents VPP binary API enum 'gbp_bridge_domain_flags'.
type GbpBridgeDomainFlags uint32

const (
	GBP_BD_API_FLAG_NONE         GbpBridgeDomainFlags = 0
	GBP_BD_API_FLAG_DO_NOT_LEARN GbpBridgeDomainFlags = 1
	GBP_BD_API_FLAG_UU_FWD_DROP  GbpBridgeDomainFlags = 2
	GBP_BD_API_FLAG_MCAST_DROP   GbpBridgeDomainFlags = 4
	GBP_BD_API_FLAG_UCAST_ARP    GbpBridgeDomainFlags = 8
)

var GbpBridgeDomainFlags_name = map[uint32]string{
	0: "GBP_BD_API_FLAG_NONE",
	1: "GBP_BD_API_FLAG_DO_NOT_LEARN",
	2: "GBP_BD_API_FLAG_UU_FWD_DROP",
	4: "GBP_BD_API_FLAG_MCAST_DROP",
	8: "GBP_BD_API_FLAG_UCAST_ARP",
}

var GbpBridgeDomainFlags_value = map[string]uint32{
	"GBP_BD_API_FLAG_NONE":         0,
	"GBP_BD_API_FLAG_DO_NOT_LEARN": 1,
	"GBP_BD_API_FLAG_UU_FWD_DROP":  2,
	"GBP_BD_API_FLAG_MCAST_DROP":   4,
	"GBP_BD_API_FLAG_UCAST_ARP":    8,
}

func (x GbpBridgeDomainFlags) String() string {
	s, ok := GbpBridgeDomainFlags_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// GbpEndpointFlags represents VPP binary API enum 'gbp_endpoint_flags'.
type GbpEndpointFlags uint32

const (
	GBP_API_ENDPOINT_FLAG_NONE     GbpEndpointFlags = 0
	GBP_API_ENDPOINT_FLAG_BOUNCE   GbpEndpointFlags = 1
	GBP_API_ENDPOINT_FLAG_REMOTE   GbpEndpointFlags = 2
	GBP_API_ENDPOINT_FLAG_LEARNT   GbpEndpointFlags = 4
	GBP_API_ENDPOINT_FLAG_EXTERNAL GbpEndpointFlags = 8
)

var GbpEndpointFlags_name = map[uint32]string{
	0: "GBP_API_ENDPOINT_FLAG_NONE",
	1: "GBP_API_ENDPOINT_FLAG_BOUNCE",
	2: "GBP_API_ENDPOINT_FLAG_REMOTE",
	4: "GBP_API_ENDPOINT_FLAG_LEARNT",
	8: "GBP_API_ENDPOINT_FLAG_EXTERNAL",
}

var GbpEndpointFlags_value = map[string]uint32{
	"GBP_API_ENDPOINT_FLAG_NONE":     0,
	"GBP_API_ENDPOINT_FLAG_BOUNCE":   1,
	"GBP_API_ENDPOINT_FLAG_REMOTE":   2,
	"GBP_API_ENDPOINT_FLAG_LEARNT":   4,
	"GBP_API_ENDPOINT_FLAG_EXTERNAL": 8,
}

func (x GbpEndpointFlags) String() string {
	s, ok := GbpEndpointFlags_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// GbpExtItfFlags represents VPP binary API enum 'gbp_ext_itf_flags'.
type GbpExtItfFlags uint32

const (
	GBP_API_EXT_ITF_F_NONE GbpExtItfFlags = 0
	GBP_API_EXT_ITF_F_ANON GbpExtItfFlags = 1
)

var GbpExtItfFlags_name = map[uint32]string{
	0: "GBP_API_EXT_ITF_F_NONE",
	1: "GBP_API_EXT_ITF_F_ANON",
}

var GbpExtItfFlags_value = map[string]uint32{
	"GBP_API_EXT_ITF_F_NONE": 0,
	"GBP_API_EXT_ITF_F_ANON": 1,
}

func (x GbpExtItfFlags) String() string {
	s, ok := GbpExtItfFlags_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// GbpHashMode represents VPP binary API enum 'gbp_hash_mode'.
type GbpHashMode uint32

const (
	GBP_API_HASH_MODE_SRC_IP    GbpHashMode = 1
	GBP_API_HASH_MODE_DST_IP    GbpHashMode = 2
	GBP_API_HASH_MODE_SYMMETRIC GbpHashMode = 3
)

var GbpHashMode_name = map[uint32]string{
	1: "GBP_API_HASH_MODE_SRC_IP",
	2: "GBP_API_HASH_MODE_DST_IP",
	3: "GBP_API_HASH_MODE_SYMMETRIC",
}

var GbpHashMode_value = map[string]uint32{
	"GBP_API_HASH_MODE_SRC_IP":    1,
	"GBP_API_HASH_MODE_DST_IP":    2,
	"GBP_API_HASH_MODE_SYMMETRIC": 3,
}

func (x GbpHashMode) String() string {
	s, ok := GbpHashMode_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// GbpRuleAction represents VPP binary API enum 'gbp_rule_action'.
type GbpRuleAction uint32

const (
	GBP_API_RULE_PERMIT   GbpRuleAction = 1
	GBP_API_RULE_DENY     GbpRuleAction = 2
	GBP_API_RULE_REDIRECT GbpRuleAction = 3
)

var GbpRuleAction_name = map[uint32]string{
	1: "GBP_API_RULE_PERMIT",
	2: "GBP_API_RULE_DENY",
	3: "GBP_API_RULE_REDIRECT",
}

var GbpRuleAction_value = map[string]uint32{
	"GBP_API_RULE_PERMIT":   1,
	"GBP_API_RULE_DENY":     2,
	"GBP_API_RULE_REDIRECT": 3,
}

func (x GbpRuleAction) String() string {
	s, ok := GbpRuleAction_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// GbpSubnetType represents VPP binary API enum 'gbp_subnet_type'.
type GbpSubnetType uint32

const (
	GBP_API_SUBNET_TRANSPORT         GbpSubnetType = 1
	GBP_API_SUBNET_STITCHED_INTERNAL GbpSubnetType = 2
	GBP_API_SUBNET_STITCHED_EXTERNAL GbpSubnetType = 3
	GBP_API_SUBNET_L3_OUT            GbpSubnetType = 4
	GBP_API_SUBNET_ANON_L3_OUT       GbpSubnetType = 5
)

var GbpSubnetType_name = map[uint32]string{
	1: "GBP_API_SUBNET_TRANSPORT",
	2: "GBP_API_SUBNET_STITCHED_INTERNAL",
	3: "GBP_API_SUBNET_STITCHED_EXTERNAL",
	4: "GBP_API_SUBNET_L3_OUT",
	5: "GBP_API_SUBNET_ANON_L3_OUT",
}

var GbpSubnetType_value = map[string]uint32{
	"GBP_API_SUBNET_TRANSPORT":         1,
	"GBP_API_SUBNET_STITCHED_INTERNAL": 2,
	"GBP_API_SUBNET_STITCHED_EXTERNAL": 3,
	"GBP_API_SUBNET_L3_OUT":            4,
	"GBP_API_SUBNET_ANON_L3_OUT":       5,
}

func (x GbpSubnetType) String() string {
	s, ok := GbpSubnetType_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// GbpVxlanTunnelMode represents VPP binary API enum 'gbp_vxlan_tunnel_mode'.
type GbpVxlanTunnelMode uint32

const (
	GBP_VXLAN_TUNNEL_MODE_L2 GbpVxlanTunnelMode = 1
	GBP_VXLAN_TUNNEL_MODE_L3 GbpVxlanTunnelMode = 2
)

var GbpVxlanTunnelMode_name = map[uint32]string{
	1: "GBP_VXLAN_TUNNEL_MODE_L2",
	2: "GBP_VXLAN_TUNNEL_MODE_L3",
}

var GbpVxlanTunnelMode_value = map[string]uint32{
	"GBP_VXLAN_TUNNEL_MODE_L2": 1,
	"GBP_VXLAN_TUNNEL_MODE_L3": 2,
}

func (x GbpVxlanTunnelMode) String() string {
	s, ok := GbpVxlanTunnelMode_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IPDscp represents VPP binary API enum 'ip_dscp'.
type IPDscp uint8

const (
	IP_API_DSCP_CS0  IPDscp = 0
	IP_API_DSCP_CS1  IPDscp = 8
	IP_API_DSCP_AF11 IPDscp = 10
	IP_API_DSCP_AF12 IPDscp = 12
	IP_API_DSCP_AF13 IPDscp = 14
	IP_API_DSCP_CS2  IPDscp = 16
	IP_API_DSCP_AF21 IPDscp = 18
	IP_API_DSCP_AF22 IPDscp = 20
	IP_API_DSCP_AF23 IPDscp = 22
	IP_API_DSCP_CS3  IPDscp = 24
	IP_API_DSCP_AF31 IPDscp = 26
	IP_API_DSCP_AF32 IPDscp = 28
	IP_API_DSCP_AF33 IPDscp = 30
	IP_API_DSCP_CS4  IPDscp = 32
	IP_API_DSCP_AF41 IPDscp = 34
	IP_API_DSCP_AF42 IPDscp = 36
	IP_API_DSCP_AF43 IPDscp = 38
	IP_API_DSCP_CS5  IPDscp = 40
	IP_API_DSCP_EF   IPDscp = 46
	IP_API_DSCP_CS6  IPDscp = 48
	IP_API_DSCP_CS7  IPDscp = 50
)

var IPDscp_name = map[uint8]string{
	0:  "IP_API_DSCP_CS0",
	8:  "IP_API_DSCP_CS1",
	10: "IP_API_DSCP_AF11",
	12: "IP_API_DSCP_AF12",
	14: "IP_API_DSCP_AF13",
	16: "IP_API_DSCP_CS2",
	18: "IP_API_DSCP_AF21",
	20: "IP_API_DSCP_AF22",
	22: "IP_API_DSCP_AF23",
	24: "IP_API_DSCP_CS3",
	26: "IP_API_DSCP_AF31",
	28: "IP_API_DSCP_AF32",
	30: "IP_API_DSCP_AF33",
	32: "IP_API_DSCP_CS4",
	34: "IP_API_DSCP_AF41",
	36: "IP_API_DSCP_AF42",
	38: "IP_API_DSCP_AF43",
	40: "IP_API_DSCP_CS5",
	46: "IP_API_DSCP_EF",
	48: "IP_API_DSCP_CS6",
	50: "IP_API_DSCP_CS7",
}

var IPDscp_value = map[string]uint8{
	"IP_API_DSCP_CS0":  0,
	"IP_API_DSCP_CS1":  8,
	"IP_API_DSCP_AF11": 10,
	"IP_API_DSCP_AF12": 12,
	"IP_API_DSCP_AF13": 14,
	"IP_API_DSCP_CS2":  16,
	"IP_API_DSCP_AF21": 18,
	"IP_API_DSCP_AF22": 20,
	"IP_API_DSCP_AF23": 22,
	"IP_API_DSCP_CS3":  24,
	"IP_API_DSCP_AF31": 26,
	"IP_API_DSCP_AF32": 28,
	"IP_API_DSCP_AF33": 30,
	"IP_API_DSCP_CS4":  32,
	"IP_API_DSCP_AF41": 34,
	"IP_API_DSCP_AF42": 36,
	"IP_API_DSCP_AF43": 38,
	"IP_API_DSCP_CS5":  40,
	"IP_API_DSCP_EF":   46,
	"IP_API_DSCP_CS6":  48,
	"IP_API_DSCP_CS7":  50,
}

func (x IPDscp) String() string {
	s, ok := IPDscp_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IPEcn represents VPP binary API enum 'ip_ecn'.
type IPEcn uint8

const (
	IP_API_ECN_NONE IPEcn = 0
	IP_API_ECN_ECT0 IPEcn = 1
	IP_API_ECN_ECT1 IPEcn = 2
	IP_API_ECN_CE   IPEcn = 3
)

var IPEcn_name = map[uint8]string{
	0: "IP_API_ECN_NONE",
	1: "IP_API_ECN_ECT0",
	2: "IP_API_ECN_ECT1",
	3: "IP_API_ECN_CE",
}

var IPEcn_value = map[string]uint8{
	"IP_API_ECN_NONE": 0,
	"IP_API_ECN_ECT0": 1,
	"IP_API_ECN_ECT1": 2,
	"IP_API_ECN_CE":   3,
}

func (x IPEcn) String() string {
	s, ok := IPEcn_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IPProto represents VPP binary API enum 'ip_proto'.
type IPProto uint32

const (
	IP_API_PROTO_HOPOPT   IPProto = 0
	IP_API_PROTO_ICMP     IPProto = 1
	IP_API_PROTO_IGMP     IPProto = 2
	IP_API_PROTO_TCP      IPProto = 6
	IP_API_PROTO_UDP      IPProto = 17
	IP_API_PROTO_GRE      IPProto = 47
	IP_API_PROTO_AH       IPProto = 50
	IP_API_PROTO_ESP      IPProto = 51
	IP_API_PROTO_EIGRP    IPProto = 88
	IP_API_PROTO_OSPF     IPProto = 89
	IP_API_PROTO_SCTP     IPProto = 132
	IP_API_PROTO_RESERVED IPProto = 255
)

var IPProto_name = map[uint32]string{
	0:   "IP_API_PROTO_HOPOPT",
	1:   "IP_API_PROTO_ICMP",
	2:   "IP_API_PROTO_IGMP",
	6:   "IP_API_PROTO_TCP",
	17:  "IP_API_PROTO_UDP",
	47:  "IP_API_PROTO_GRE",
	50:  "IP_API_PROTO_AH",
	51:  "IP_API_PROTO_ESP",
	88:  "IP_API_PROTO_EIGRP",
	89:  "IP_API_PROTO_OSPF",
	132: "IP_API_PROTO_SCTP",
	255: "IP_API_PROTO_RESERVED",
}

var IPProto_value = map[string]uint32{
	"IP_API_PROTO_HOPOPT":   0,
	"IP_API_PROTO_ICMP":     1,
	"IP_API_PROTO_IGMP":     2,
	"IP_API_PROTO_TCP":      6,
	"IP_API_PROTO_UDP":      17,
	"IP_API_PROTO_GRE":      47,
	"IP_API_PROTO_AH":       50,
	"IP_API_PROTO_ESP":      51,
	"IP_API_PROTO_EIGRP":    88,
	"IP_API_PROTO_OSPF":     89,
	"IP_API_PROTO_SCTP":     132,
	"IP_API_PROTO_RESERVED": 255,
}

func (x IPProto) String() string {
	s, ok := IPProto_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// AddressWithPrefix represents VPP binary API alias 'address_with_prefix'.
type AddressWithPrefix Prefix

// GbpScope represents VPP binary API alias 'gbp_scope'.
type GbpScope uint16

// IP4Address represents VPP binary API alias 'ip4_address'.
type IP4Address [4]uint8

// IP4AddressWithPrefix represents VPP binary API alias 'ip4_address_with_prefix'.
type IP4AddressWithPrefix IP4Prefix

// IP6Address represents VPP binary API alias 'ip6_address'.
type IP6Address [16]uint8

// IP6AddressWithPrefix represents VPP binary API alias 'ip6_address_with_prefix'.
type IP6AddressWithPrefix IP6Prefix

// MacAddress represents VPP binary API alias 'mac_address'.
type MacAddress [6]uint8

// Address represents VPP binary API type 'address'.
type Address struct {
	Af AddressFamily
	Un AddressUnion
}

func (*Address) GetTypeName() string {
	return "address"
}

// GbpBridgeDomain represents VPP binary API type 'gbp_bridge_domain'.
type GbpBridgeDomain struct {
	BdID             uint32
	RdID             uint32
	Flags            GbpBridgeDomainFlags
	BviSwIfIndex     uint32
	UuFwdSwIfIndex   uint32
	BmFloodSwIfIndex uint32
}

func (*GbpBridgeDomain) GetTypeName() string {
	return "gbp_bridge_domain"
}

// GbpContract represents VPP binary API type 'gbp_contract'.
type GbpContract struct {
	Scope             GbpScope
	Sclass            uint16
	Dclass            uint16
	ACLIndex          uint32
	NEtherTypes       uint8
	AllowedEthertypes []uint16 `struc:"[16]uint16"`
	NRules            uint8    `struc:"sizeof=Rules"`
	Rules             []GbpRule
}

func (*GbpContract) GetTypeName() string {
	return "gbp_contract"
}

// GbpEndpoint represents VPP binary API type 'gbp_endpoint'.
type GbpEndpoint struct {
	SwIfIndex uint32
	Sclass    uint16
	Flags     GbpEndpointFlags
	Mac       MacAddress
	Tun       GbpEndpointTun
	NIps      uint8 `struc:"sizeof=Ips"`
	Ips       []Address
}

func (*GbpEndpoint) GetTypeName() string {
	return "gbp_endpoint"
}

// GbpEndpointGroup represents VPP binary API type 'gbp_endpoint_group'.
type GbpEndpointGroup struct {
	Vnid            uint32
	Sclass          uint16
	BdID            uint32
	RdID            uint32
	UplinkSwIfIndex uint32
	Retention       GbpEndpointRetention
}

func (*GbpEndpointGroup) GetTypeName() string {
	return "gbp_endpoint_group"
}

// GbpEndpointRetention represents VPP binary API type 'gbp_endpoint_retention'.
type GbpEndpointRetention struct {
	RemoteEpTimeout uint32
}

func (*GbpEndpointRetention) GetTypeName() string {
	return "gbp_endpoint_retention"
}

// GbpEndpointTun represents VPP binary API type 'gbp_endpoint_tun'.
type GbpEndpointTun struct {
	Src Address
	Dst Address
}

func (*GbpEndpointTun) GetTypeName() string {
	return "gbp_endpoint_tun"
}

// GbpExtItf represents VPP binary API type 'gbp_ext_itf'.
type GbpExtItf struct {
	SwIfIndex uint32
	BdID      uint32
	RdID      uint32
	Flags     GbpExtItfFlags
}

func (*GbpExtItf) GetTypeName() string {
	return "gbp_ext_itf"
}

// GbpNextHop represents VPP binary API type 'gbp_next_hop'.
type GbpNextHop struct {
	IP   Address
	Mac  MacAddress
	BdID uint32
	RdID uint32
}

func (*GbpNextHop) GetTypeName() string {
	return "gbp_next_hop"
}

// GbpNextHopSet represents VPP binary API type 'gbp_next_hop_set'.
type GbpNextHopSet struct {
	HashMode GbpHashMode
	NNhs     uint8
	Nhs      []GbpNextHop `struc:"[8]GbpNextHop"`
}

func (*GbpNextHopSet) GetTypeName() string {
	return "gbp_next_hop_set"
}

// GbpRecirc represents VPP binary API type 'gbp_recirc'.
type GbpRecirc struct {
	SwIfIndex uint32
	Sclass    uint16
	IsExt     uint8
}

func (*GbpRecirc) GetTypeName() string {
	return "gbp_recirc"
}

// GbpRouteDomain represents VPP binary API type 'gbp_route_domain'.
type GbpRouteDomain struct {
	RdID           uint32
	IP4TableID     uint32
	IP6TableID     uint32
	IP4UuSwIfIndex uint32
	IP6UuSwIfIndex uint32
	Scope          GbpScope
}

func (*GbpRouteDomain) GetTypeName() string {
	return "gbp_route_domain"
}

// GbpRule represents VPP binary API type 'gbp_rule'.
type GbpRule struct {
	Action GbpRuleAction
	NhSet  GbpNextHopSet
}

func (*GbpRule) GetTypeName() string {
	return "gbp_rule"
}

// GbpSubnet represents VPP binary API type 'gbp_subnet'.
type GbpSubnet struct {
	RdID      uint32
	SwIfIndex uint32
	Sclass    uint16
	Type      GbpSubnetType
	Prefix    Prefix
}

func (*GbpSubnet) GetTypeName() string {
	return "gbp_subnet"
}

// GbpVxlanTunnel represents VPP binary API type 'gbp_vxlan_tunnel'.
type GbpVxlanTunnel struct {
	Vni    uint32
	Mode   GbpVxlanTunnelMode
	BdRdID uint32
	Src    IP4Address
}

func (*GbpVxlanTunnel) GetTypeName() string {
	return "gbp_vxlan_tunnel"
}

// IP4Prefix represents VPP binary API type 'ip4_prefix'.
type IP4Prefix struct {
	Address IP4Address
	Len     uint8
}

func (*IP4Prefix) GetTypeName() string {
	return "ip4_prefix"
}

// IP6Prefix represents VPP binary API type 'ip6_prefix'.
type IP6Prefix struct {
	Address IP6Address
	Len     uint8
}

func (*IP6Prefix) GetTypeName() string {
	return "ip6_prefix"
}

// Mprefix represents VPP binary API type 'mprefix'.
type Mprefix struct {
	Af               AddressFamily
	GrpAddressLength uint16
	GrpAddress       AddressUnion
	SrcAddress       AddressUnion
}

func (*Mprefix) GetTypeName() string {
	return "mprefix"
}

// Prefix represents VPP binary API type 'prefix'.
type Prefix struct {
	Address Address
	Len     uint8
}

func (*Prefix) GetTypeName() string {
	return "prefix"
}

// PrefixMatcher represents VPP binary API type 'prefix_matcher'.
type PrefixMatcher struct {
	Le uint8
	Ge uint8
}

func (*PrefixMatcher) GetTypeName() string {
	return "prefix_matcher"
}

// AddressUnion represents VPP binary API union 'address_union'.
type AddressUnion struct {
	XXX_UnionData [16]byte
}

func (*AddressUnion) GetTypeName() string {
	return "address_union"
}

func AddressUnionIP4(a IP4Address) (u AddressUnion) {
	u.SetIP4(a)
	return
}
func (u *AddressUnion) SetIP4(a IP4Address) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.XXX_UnionData[:], b.Bytes())
}
func (u *AddressUnion) GetIP4() (a IP4Address) {
	var b = bytes.NewReader(u.XXX_UnionData[:])
	struc.Unpack(b, &a)
	return
}

func AddressUnionIP6(a IP6Address) (u AddressUnion) {
	u.SetIP6(a)
	return
}
func (u *AddressUnion) SetIP6(a IP6Address) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.XXX_UnionData[:], b.Bytes())
}
func (u *AddressUnion) GetIP6() (a IP6Address) {
	var b = bytes.NewReader(u.XXX_UnionData[:])
	struc.Unpack(b, &a)
	return
}

// GbpBridgeDomainAdd represents VPP binary API message 'gbp_bridge_domain_add'.
type GbpBridgeDomainAdd struct {
	Bd GbpBridgeDomain
}

func (*GbpBridgeDomainAdd) GetMessageName() string {
	return "gbp_bridge_domain_add"
}
func (*GbpBridgeDomainAdd) GetCrcString() string {
	return "70f1069c"
}
func (*GbpBridgeDomainAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpBridgeDomainAddReply represents VPP binary API message 'gbp_bridge_domain_add_reply'.
type GbpBridgeDomainAddReply struct {
	Retval int32
}

func (*GbpBridgeDomainAddReply) GetMessageName() string {
	return "gbp_bridge_domain_add_reply"
}
func (*GbpBridgeDomainAddReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpBridgeDomainAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpBridgeDomainDel represents VPP binary API message 'gbp_bridge_domain_del'.
type GbpBridgeDomainDel struct {
	BdID uint32
}

func (*GbpBridgeDomainDel) GetMessageName() string {
	return "gbp_bridge_domain_del"
}
func (*GbpBridgeDomainDel) GetCrcString() string {
	return "c25fdce6"
}
func (*GbpBridgeDomainDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpBridgeDomainDelReply represents VPP binary API message 'gbp_bridge_domain_del_reply'.
type GbpBridgeDomainDelReply struct {
	Retval int32
}

func (*GbpBridgeDomainDelReply) GetMessageName() string {
	return "gbp_bridge_domain_del_reply"
}
func (*GbpBridgeDomainDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpBridgeDomainDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpBridgeDomainDetails represents VPP binary API message 'gbp_bridge_domain_details'.
type GbpBridgeDomainDetails struct {
	Bd GbpBridgeDomain
}

func (*GbpBridgeDomainDetails) GetMessageName() string {
	return "gbp_bridge_domain_details"
}
func (*GbpBridgeDomainDetails) GetCrcString() string {
	return "db8b025a"
}
func (*GbpBridgeDomainDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpBridgeDomainDump represents VPP binary API message 'gbp_bridge_domain_dump'.
type GbpBridgeDomainDump struct{}

func (*GbpBridgeDomainDump) GetMessageName() string {
	return "gbp_bridge_domain_dump"
}
func (*GbpBridgeDomainDump) GetCrcString() string {
	return "51077d14"
}
func (*GbpBridgeDomainDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpBridgeDomainDumpReply represents VPP binary API message 'gbp_bridge_domain_dump_reply'.
type GbpBridgeDomainDumpReply struct {
	Retval int32
}

func (*GbpBridgeDomainDumpReply) GetMessageName() string {
	return "gbp_bridge_domain_dump_reply"
}
func (*GbpBridgeDomainDumpReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpBridgeDomainDumpReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpContractAddDel represents VPP binary API message 'gbp_contract_add_del'.
type GbpContractAddDel struct {
	IsAdd    uint8
	Contract GbpContract
}

func (*GbpContractAddDel) GetMessageName() string {
	return "gbp_contract_add_del"
}
func (*GbpContractAddDel) GetCrcString() string {
	return "5b63d90a"
}
func (*GbpContractAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpContractAddDelReply represents VPP binary API message 'gbp_contract_add_del_reply'.
type GbpContractAddDelReply struct {
	Retval     int32
	StatsIndex uint32
}

func (*GbpContractAddDelReply) GetMessageName() string {
	return "gbp_contract_add_del_reply"
}
func (*GbpContractAddDelReply) GetCrcString() string {
	return "1992deab"
}
func (*GbpContractAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpContractDetails represents VPP binary API message 'gbp_contract_details'.
type GbpContractDetails struct {
	Contract GbpContract
}

func (*GbpContractDetails) GetMessageName() string {
	return "gbp_contract_details"
}
func (*GbpContractDetails) GetCrcString() string {
	return "2a18db6e"
}
func (*GbpContractDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpContractDump represents VPP binary API message 'gbp_contract_dump'.
type GbpContractDump struct{}

func (*GbpContractDump) GetMessageName() string {
	return "gbp_contract_dump"
}
func (*GbpContractDump) GetCrcString() string {
	return "51077d14"
}
func (*GbpContractDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpEndpointAdd represents VPP binary API message 'gbp_endpoint_add'.
type GbpEndpointAdd struct {
	Endpoint GbpEndpoint
}

func (*GbpEndpointAdd) GetMessageName() string {
	return "gbp_endpoint_add"
}
func (*GbpEndpointAdd) GetCrcString() string {
	return "f0efa120"
}
func (*GbpEndpointAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpEndpointAddReply represents VPP binary API message 'gbp_endpoint_add_reply'.
type GbpEndpointAddReply struct {
	Retval int32
	Handle uint32
}

func (*GbpEndpointAddReply) GetMessageName() string {
	return "gbp_endpoint_add_reply"
}
func (*GbpEndpointAddReply) GetCrcString() string {
	return "1dd3ff3e"
}
func (*GbpEndpointAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpEndpointDel represents VPP binary API message 'gbp_endpoint_del'.
type GbpEndpointDel struct {
	Handle uint32
}

func (*GbpEndpointDel) GetMessageName() string {
	return "gbp_endpoint_del"
}
func (*GbpEndpointDel) GetCrcString() string {
	return "b93cd566"
}
func (*GbpEndpointDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpEndpointDelReply represents VPP binary API message 'gbp_endpoint_del_reply'.
type GbpEndpointDelReply struct {
	Retval int32
}

func (*GbpEndpointDelReply) GetMessageName() string {
	return "gbp_endpoint_del_reply"
}
func (*GbpEndpointDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpEndpointDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpEndpointDetails represents VPP binary API message 'gbp_endpoint_details'.
type GbpEndpointDetails struct {
	Age      float64
	Handle   uint32
	Endpoint GbpEndpoint
}

func (*GbpEndpointDetails) GetMessageName() string {
	return "gbp_endpoint_details"
}
func (*GbpEndpointDetails) GetCrcString() string {
	return "e1ca5e65"
}
func (*GbpEndpointDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpEndpointDump represents VPP binary API message 'gbp_endpoint_dump'.
type GbpEndpointDump struct{}

func (*GbpEndpointDump) GetMessageName() string {
	return "gbp_endpoint_dump"
}
func (*GbpEndpointDump) GetCrcString() string {
	return "51077d14"
}
func (*GbpEndpointDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpEndpointGroupAdd represents VPP binary API message 'gbp_endpoint_group_add'.
type GbpEndpointGroupAdd struct {
	Epg GbpEndpointGroup
}

func (*GbpEndpointGroupAdd) GetMessageName() string {
	return "gbp_endpoint_group_add"
}
func (*GbpEndpointGroupAdd) GetCrcString() string {
	return "1031b376"
}
func (*GbpEndpointGroupAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpEndpointGroupAddReply represents VPP binary API message 'gbp_endpoint_group_add_reply'.
type GbpEndpointGroupAddReply struct {
	Retval int32
}

func (*GbpEndpointGroupAddReply) GetMessageName() string {
	return "gbp_endpoint_group_add_reply"
}
func (*GbpEndpointGroupAddReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpEndpointGroupAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpEndpointGroupDel represents VPP binary API message 'gbp_endpoint_group_del'.
type GbpEndpointGroupDel struct {
	Sclass uint16
}

func (*GbpEndpointGroupDel) GetMessageName() string {
	return "gbp_endpoint_group_del"
}
func (*GbpEndpointGroupDel) GetCrcString() string {
	return "3436b8b7"
}
func (*GbpEndpointGroupDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpEndpointGroupDelReply represents VPP binary API message 'gbp_endpoint_group_del_reply'.
type GbpEndpointGroupDelReply struct {
	Retval int32
}

func (*GbpEndpointGroupDelReply) GetMessageName() string {
	return "gbp_endpoint_group_del_reply"
}
func (*GbpEndpointGroupDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpEndpointGroupDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpEndpointGroupDetails represents VPP binary API message 'gbp_endpoint_group_details'.
type GbpEndpointGroupDetails struct {
	Epg GbpEndpointGroup
}

func (*GbpEndpointGroupDetails) GetMessageName() string {
	return "gbp_endpoint_group_details"
}
func (*GbpEndpointGroupDetails) GetCrcString() string {
	return "4bf0705b"
}
func (*GbpEndpointGroupDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpEndpointGroupDump represents VPP binary API message 'gbp_endpoint_group_dump'.
type GbpEndpointGroupDump struct{}

func (*GbpEndpointGroupDump) GetMessageName() string {
	return "gbp_endpoint_group_dump"
}
func (*GbpEndpointGroupDump) GetCrcString() string {
	return "51077d14"
}
func (*GbpEndpointGroupDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpExtItfAddDel represents VPP binary API message 'gbp_ext_itf_add_del'.
type GbpExtItfAddDel struct {
	IsAdd  uint8
	ExtItf GbpExtItf
}

func (*GbpExtItfAddDel) GetMessageName() string {
	return "gbp_ext_itf_add_del"
}
func (*GbpExtItfAddDel) GetCrcString() string {
	return "6995e85f"
}
func (*GbpExtItfAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpExtItfAddDelReply represents VPP binary API message 'gbp_ext_itf_add_del_reply'.
type GbpExtItfAddDelReply struct {
	Retval int32
}

func (*GbpExtItfAddDelReply) GetMessageName() string {
	return "gbp_ext_itf_add_del_reply"
}
func (*GbpExtItfAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpExtItfAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpExtItfDetails represents VPP binary API message 'gbp_ext_itf_details'.
type GbpExtItfDetails struct {
	ExtItf GbpExtItf
}

func (*GbpExtItfDetails) GetMessageName() string {
	return "gbp_ext_itf_details"
}
func (*GbpExtItfDetails) GetCrcString() string {
	return "89c19ec5"
}
func (*GbpExtItfDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpExtItfDump represents VPP binary API message 'gbp_ext_itf_dump'.
type GbpExtItfDump struct{}

func (*GbpExtItfDump) GetMessageName() string {
	return "gbp_ext_itf_dump"
}
func (*GbpExtItfDump) GetCrcString() string {
	return "51077d14"
}
func (*GbpExtItfDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpRecircAddDel represents VPP binary API message 'gbp_recirc_add_del'.
type GbpRecircAddDel struct {
	IsAdd  uint8
	Recirc GbpRecirc
}

func (*GbpRecircAddDel) GetMessageName() string {
	return "gbp_recirc_add_del"
}
func (*GbpRecircAddDel) GetCrcString() string {
	return "aaba42d5"
}
func (*GbpRecircAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpRecircAddDelReply represents VPP binary API message 'gbp_recirc_add_del_reply'.
type GbpRecircAddDelReply struct {
	Retval int32
}

func (*GbpRecircAddDelReply) GetMessageName() string {
	return "gbp_recirc_add_del_reply"
}
func (*GbpRecircAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpRecircAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpRecircDetails represents VPP binary API message 'gbp_recirc_details'.
type GbpRecircDetails struct {
	Recirc GbpRecirc
}

func (*GbpRecircDetails) GetMessageName() string {
	return "gbp_recirc_details"
}
func (*GbpRecircDetails) GetCrcString() string {
	return "3b048478"
}
func (*GbpRecircDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpRecircDump represents VPP binary API message 'gbp_recirc_dump'.
type GbpRecircDump struct{}

func (*GbpRecircDump) GetMessageName() string {
	return "gbp_recirc_dump"
}
func (*GbpRecircDump) GetCrcString() string {
	return "51077d14"
}
func (*GbpRecircDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpRouteDomainAdd represents VPP binary API message 'gbp_route_domain_add'.
type GbpRouteDomainAdd struct {
	Rd GbpRouteDomain
}

func (*GbpRouteDomainAdd) GetMessageName() string {
	return "gbp_route_domain_add"
}
func (*GbpRouteDomainAdd) GetCrcString() string {
	return "1560adc7"
}
func (*GbpRouteDomainAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpRouteDomainAddReply represents VPP binary API message 'gbp_route_domain_add_reply'.
type GbpRouteDomainAddReply struct {
	Retval int32
}

func (*GbpRouteDomainAddReply) GetMessageName() string {
	return "gbp_route_domain_add_reply"
}
func (*GbpRouteDomainAddReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpRouteDomainAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpRouteDomainDel represents VPP binary API message 'gbp_route_domain_del'.
type GbpRouteDomainDel struct {
	RdID uint32
}

func (*GbpRouteDomainDel) GetMessageName() string {
	return "gbp_route_domain_del"
}
func (*GbpRouteDomainDel) GetCrcString() string {
	return "bee4edcd"
}
func (*GbpRouteDomainDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpRouteDomainDelReply represents VPP binary API message 'gbp_route_domain_del_reply'.
type GbpRouteDomainDelReply struct {
	Retval int32
}

func (*GbpRouteDomainDelReply) GetMessageName() string {
	return "gbp_route_domain_del_reply"
}
func (*GbpRouteDomainDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpRouteDomainDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpRouteDomainDetails represents VPP binary API message 'gbp_route_domain_details'.
type GbpRouteDomainDetails struct {
	Rd GbpRouteDomain
}

func (*GbpRouteDomainDetails) GetMessageName() string {
	return "gbp_route_domain_details"
}
func (*GbpRouteDomainDetails) GetCrcString() string {
	return "53241099"
}
func (*GbpRouteDomainDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpRouteDomainDump represents VPP binary API message 'gbp_route_domain_dump'.
type GbpRouteDomainDump struct{}

func (*GbpRouteDomainDump) GetMessageName() string {
	return "gbp_route_domain_dump"
}
func (*GbpRouteDomainDump) GetCrcString() string {
	return "51077d14"
}
func (*GbpRouteDomainDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpRouteDomainDumpReply represents VPP binary API message 'gbp_route_domain_dump_reply'.
type GbpRouteDomainDumpReply struct {
	Retval int32
}

func (*GbpRouteDomainDumpReply) GetMessageName() string {
	return "gbp_route_domain_dump_reply"
}
func (*GbpRouteDomainDumpReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpRouteDomainDumpReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpSubnetAddDel represents VPP binary API message 'gbp_subnet_add_del'.
type GbpSubnetAddDel struct {
	IsAdd  uint8
	Subnet GbpSubnet
}

func (*GbpSubnetAddDel) GetMessageName() string {
	return "gbp_subnet_add_del"
}
func (*GbpSubnetAddDel) GetCrcString() string {
	return "f42b9430"
}
func (*GbpSubnetAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpSubnetAddDelReply represents VPP binary API message 'gbp_subnet_add_del_reply'.
type GbpSubnetAddDelReply struct {
	Retval int32
}

func (*GbpSubnetAddDelReply) GetMessageName() string {
	return "gbp_subnet_add_del_reply"
}
func (*GbpSubnetAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpSubnetAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpSubnetDetails represents VPP binary API message 'gbp_subnet_details'.
type GbpSubnetDetails struct {
	Subnet GbpSubnet
}

func (*GbpSubnetDetails) GetMessageName() string {
	return "gbp_subnet_details"
}
func (*GbpSubnetDetails) GetCrcString() string {
	return "871555dc"
}
func (*GbpSubnetDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpSubnetDump represents VPP binary API message 'gbp_subnet_dump'.
type GbpSubnetDump struct{}

func (*GbpSubnetDump) GetMessageName() string {
	return "gbp_subnet_dump"
}
func (*GbpSubnetDump) GetCrcString() string {
	return "51077d14"
}
func (*GbpSubnetDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpVxlanTunnelAdd represents VPP binary API message 'gbp_vxlan_tunnel_add'.
type GbpVxlanTunnelAdd struct {
	Tunnel GbpVxlanTunnel
}

func (*GbpVxlanTunnelAdd) GetMessageName() string {
	return "gbp_vxlan_tunnel_add"
}
func (*GbpVxlanTunnelAdd) GetCrcString() string {
	return "3e070b35"
}
func (*GbpVxlanTunnelAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpVxlanTunnelAddReply represents VPP binary API message 'gbp_vxlan_tunnel_add_reply'.
type GbpVxlanTunnelAddReply struct {
	Retval    int32
	SwIfIndex uint32
}

func (*GbpVxlanTunnelAddReply) GetMessageName() string {
	return "gbp_vxlan_tunnel_add_reply"
}
func (*GbpVxlanTunnelAddReply) GetCrcString() string {
	return "fda5941f"
}
func (*GbpVxlanTunnelAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpVxlanTunnelDel represents VPP binary API message 'gbp_vxlan_tunnel_del'.
type GbpVxlanTunnelDel struct {
	Vni uint32
}

func (*GbpVxlanTunnelDel) GetMessageName() string {
	return "gbp_vxlan_tunnel_del"
}
func (*GbpVxlanTunnelDel) GetCrcString() string {
	return "8d1f2fe9"
}
func (*GbpVxlanTunnelDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// GbpVxlanTunnelDelReply represents VPP binary API message 'gbp_vxlan_tunnel_del_reply'.
type GbpVxlanTunnelDelReply struct {
	Retval int32
}

func (*GbpVxlanTunnelDelReply) GetMessageName() string {
	return "gbp_vxlan_tunnel_del_reply"
}
func (*GbpVxlanTunnelDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*GbpVxlanTunnelDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpVxlanTunnelDetails represents VPP binary API message 'gbp_vxlan_tunnel_details'.
type GbpVxlanTunnelDetails struct {
	Tunnel GbpVxlanTunnel
}

func (*GbpVxlanTunnelDetails) GetMessageName() string {
	return "gbp_vxlan_tunnel_details"
}
func (*GbpVxlanTunnelDetails) GetCrcString() string {
	return "65c6c818"
}
func (*GbpVxlanTunnelDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// GbpVxlanTunnelDump represents VPP binary API message 'gbp_vxlan_tunnel_dump'.
type GbpVxlanTunnelDump struct{}

func (*GbpVxlanTunnelDump) GetMessageName() string {
	return "gbp_vxlan_tunnel_dump"
}
func (*GbpVxlanTunnelDump) GetCrcString() string {
	return "51077d14"
}
func (*GbpVxlanTunnelDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func init() {
	api.RegisterMessage((*GbpBridgeDomainAdd)(nil), "gbp.GbpBridgeDomainAdd")
	api.RegisterMessage((*GbpBridgeDomainAddReply)(nil), "gbp.GbpBridgeDomainAddReply")
	api.RegisterMessage((*GbpBridgeDomainDel)(nil), "gbp.GbpBridgeDomainDel")
	api.RegisterMessage((*GbpBridgeDomainDelReply)(nil), "gbp.GbpBridgeDomainDelReply")
	api.RegisterMessage((*GbpBridgeDomainDetails)(nil), "gbp.GbpBridgeDomainDetails")
	api.RegisterMessage((*GbpBridgeDomainDump)(nil), "gbp.GbpBridgeDomainDump")
	api.RegisterMessage((*GbpBridgeDomainDumpReply)(nil), "gbp.GbpBridgeDomainDumpReply")
	api.RegisterMessage((*GbpContractAddDel)(nil), "gbp.GbpContractAddDel")
	api.RegisterMessage((*GbpContractAddDelReply)(nil), "gbp.GbpContractAddDelReply")
	api.RegisterMessage((*GbpContractDetails)(nil), "gbp.GbpContractDetails")
	api.RegisterMessage((*GbpContractDump)(nil), "gbp.GbpContractDump")
	api.RegisterMessage((*GbpEndpointAdd)(nil), "gbp.GbpEndpointAdd")
	api.RegisterMessage((*GbpEndpointAddReply)(nil), "gbp.GbpEndpointAddReply")
	api.RegisterMessage((*GbpEndpointDel)(nil), "gbp.GbpEndpointDel")
	api.RegisterMessage((*GbpEndpointDelReply)(nil), "gbp.GbpEndpointDelReply")
	api.RegisterMessage((*GbpEndpointDetails)(nil), "gbp.GbpEndpointDetails")
	api.RegisterMessage((*GbpEndpointDump)(nil), "gbp.GbpEndpointDump")
	api.RegisterMessage((*GbpEndpointGroupAdd)(nil), "gbp.GbpEndpointGroupAdd")
	api.RegisterMessage((*GbpEndpointGroupAddReply)(nil), "gbp.GbpEndpointGroupAddReply")
	api.RegisterMessage((*GbpEndpointGroupDel)(nil), "gbp.GbpEndpointGroupDel")
	api.RegisterMessage((*GbpEndpointGroupDelReply)(nil), "gbp.GbpEndpointGroupDelReply")
	api.RegisterMessage((*GbpEndpointGroupDetails)(nil), "gbp.GbpEndpointGroupDetails")
	api.RegisterMessage((*GbpEndpointGroupDump)(nil), "gbp.GbpEndpointGroupDump")
	api.RegisterMessage((*GbpExtItfAddDel)(nil), "gbp.GbpExtItfAddDel")
	api.RegisterMessage((*GbpExtItfAddDelReply)(nil), "gbp.GbpExtItfAddDelReply")
	api.RegisterMessage((*GbpExtItfDetails)(nil), "gbp.GbpExtItfDetails")
	api.RegisterMessage((*GbpExtItfDump)(nil), "gbp.GbpExtItfDump")
	api.RegisterMessage((*GbpRecircAddDel)(nil), "gbp.GbpRecircAddDel")
	api.RegisterMessage((*GbpRecircAddDelReply)(nil), "gbp.GbpRecircAddDelReply")
	api.RegisterMessage((*GbpRecircDetails)(nil), "gbp.GbpRecircDetails")
	api.RegisterMessage((*GbpRecircDump)(nil), "gbp.GbpRecircDump")
	api.RegisterMessage((*GbpRouteDomainAdd)(nil), "gbp.GbpRouteDomainAdd")
	api.RegisterMessage((*GbpRouteDomainAddReply)(nil), "gbp.GbpRouteDomainAddReply")
	api.RegisterMessage((*GbpRouteDomainDel)(nil), "gbp.GbpRouteDomainDel")
	api.RegisterMessage((*GbpRouteDomainDelReply)(nil), "gbp.GbpRouteDomainDelReply")
	api.RegisterMessage((*GbpRouteDomainDetails)(nil), "gbp.GbpRouteDomainDetails")
	api.RegisterMessage((*GbpRouteDomainDump)(nil), "gbp.GbpRouteDomainDump")
	api.RegisterMessage((*GbpRouteDomainDumpReply)(nil), "gbp.GbpRouteDomainDumpReply")
	api.RegisterMessage((*GbpSubnetAddDel)(nil), "gbp.GbpSubnetAddDel")
	api.RegisterMessage((*GbpSubnetAddDelReply)(nil), "gbp.GbpSubnetAddDelReply")
	api.RegisterMessage((*GbpSubnetDetails)(nil), "gbp.GbpSubnetDetails")
	api.RegisterMessage((*GbpSubnetDump)(nil), "gbp.GbpSubnetDump")
	api.RegisterMessage((*GbpVxlanTunnelAdd)(nil), "gbp.GbpVxlanTunnelAdd")
	api.RegisterMessage((*GbpVxlanTunnelAddReply)(nil), "gbp.GbpVxlanTunnelAddReply")
	api.RegisterMessage((*GbpVxlanTunnelDel)(nil), "gbp.GbpVxlanTunnelDel")
	api.RegisterMessage((*GbpVxlanTunnelDelReply)(nil), "gbp.GbpVxlanTunnelDelReply")
	api.RegisterMessage((*GbpVxlanTunnelDetails)(nil), "gbp.GbpVxlanTunnelDetails")
	api.RegisterMessage((*GbpVxlanTunnelDump)(nil), "gbp.GbpVxlanTunnelDump")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*GbpBridgeDomainAdd)(nil),
		(*GbpBridgeDomainAddReply)(nil),
		(*GbpBridgeDomainDel)(nil),
		(*GbpBridgeDomainDelReply)(nil),
		(*GbpBridgeDomainDetails)(nil),
		(*GbpBridgeDomainDump)(nil),
		(*GbpBridgeDomainDumpReply)(nil),
		(*GbpContractAddDel)(nil),
		(*GbpContractAddDelReply)(nil),
		(*GbpContractDetails)(nil),
		(*GbpContractDump)(nil),
		(*GbpEndpointAdd)(nil),
		(*GbpEndpointAddReply)(nil),
		(*GbpEndpointDel)(nil),
		(*GbpEndpointDelReply)(nil),
		(*GbpEndpointDetails)(nil),
		(*GbpEndpointDump)(nil),
		(*GbpEndpointGroupAdd)(nil),
		(*GbpEndpointGroupAddReply)(nil),
		(*GbpEndpointGroupDel)(nil),
		(*GbpEndpointGroupDelReply)(nil),
		(*GbpEndpointGroupDetails)(nil),
		(*GbpEndpointGroupDump)(nil),
		(*GbpExtItfAddDel)(nil),
		(*GbpExtItfAddDelReply)(nil),
		(*GbpExtItfDetails)(nil),
		(*GbpExtItfDump)(nil),
		(*GbpRecircAddDel)(nil),
		(*GbpRecircAddDelReply)(nil),
		(*GbpRecircDetails)(nil),
		(*GbpRecircDump)(nil),
		(*GbpRouteDomainAdd)(nil),
		(*GbpRouteDomainAddReply)(nil),
		(*GbpRouteDomainDel)(nil),
		(*GbpRouteDomainDelReply)(nil),
		(*GbpRouteDomainDetails)(nil),
		(*GbpRouteDomainDump)(nil),
		(*GbpRouteDomainDumpReply)(nil),
		(*GbpSubnetAddDel)(nil),
		(*GbpSubnetAddDelReply)(nil),
		(*GbpSubnetDetails)(nil),
		(*GbpSubnetDump)(nil),
		(*GbpVxlanTunnelAdd)(nil),
		(*GbpVxlanTunnelAddReply)(nil),
		(*GbpVxlanTunnelDel)(nil),
		(*GbpVxlanTunnelDelReply)(nil),
		(*GbpVxlanTunnelDetails)(nil),
		(*GbpVxlanTunnelDump)(nil),
	}
}

// RPCService represents RPC service API for gbp module.
type RPCService interface {
	DumpGbpBridgeDomain(ctx context.Context, in *GbpBridgeDomainDump) (RPCService_DumpGbpBridgeDomainClient, error)
	DumpGbpContract(ctx context.Context, in *GbpContractDump) (RPCService_DumpGbpContractClient, error)
	DumpGbpEndpoint(ctx context.Context, in *GbpEndpointDump) (RPCService_DumpGbpEndpointClient, error)
	DumpGbpEndpointGroup(ctx context.Context, in *GbpEndpointGroupDump) (RPCService_DumpGbpEndpointGroupClient, error)
	DumpGbpExtItf(ctx context.Context, in *GbpExtItfDump) (RPCService_DumpGbpExtItfClient, error)
	DumpGbpRecirc(ctx context.Context, in *GbpRecircDump) (RPCService_DumpGbpRecircClient, error)
	DumpGbpRouteDomain(ctx context.Context, in *GbpRouteDomainDump) (RPCService_DumpGbpRouteDomainClient, error)
	DumpGbpSubnet(ctx context.Context, in *GbpSubnetDump) (RPCService_DumpGbpSubnetClient, error)
	DumpGbpVxlanTunnel(ctx context.Context, in *GbpVxlanTunnelDump) (RPCService_DumpGbpVxlanTunnelClient, error)
	GbpBridgeDomainAdd(ctx context.Context, in *GbpBridgeDomainAdd) (*GbpBridgeDomainAddReply, error)
	GbpBridgeDomainDel(ctx context.Context, in *GbpBridgeDomainDel) (*GbpBridgeDomainDelReply, error)
	GbpContractAddDel(ctx context.Context, in *GbpContractAddDel) (*GbpContractAddDelReply, error)
	GbpEndpointAdd(ctx context.Context, in *GbpEndpointAdd) (*GbpEndpointAddReply, error)
	GbpEndpointDel(ctx context.Context, in *GbpEndpointDel) (*GbpEndpointDelReply, error)
	GbpEndpointGroupAdd(ctx context.Context, in *GbpEndpointGroupAdd) (*GbpEndpointGroupAddReply, error)
	GbpEndpointGroupDel(ctx context.Context, in *GbpEndpointGroupDel) (*GbpEndpointGroupDelReply, error)
	GbpExtItfAddDel(ctx context.Context, in *GbpExtItfAddDel) (*GbpExtItfAddDelReply, error)
	GbpRecircAddDel(ctx context.Context, in *GbpRecircAddDel) (*GbpRecircAddDelReply, error)
	GbpRouteDomainAdd(ctx context.Context, in *GbpRouteDomainAdd) (*GbpRouteDomainAddReply, error)
	GbpRouteDomainDel(ctx context.Context, in *GbpRouteDomainDel) (*GbpRouteDomainDelReply, error)
	GbpSubnetAddDel(ctx context.Context, in *GbpSubnetAddDel) (*GbpSubnetAddDelReply, error)
	GbpVxlanTunnelAdd(ctx context.Context, in *GbpVxlanTunnelAdd) (*GbpVxlanTunnelAddReply, error)
	GbpVxlanTunnelDel(ctx context.Context, in *GbpVxlanTunnelDel) (*GbpVxlanTunnelDelReply, error)
}

type serviceClient struct {
	ch api.Channel
}

func NewServiceClient(ch api.Channel) RPCService {
	return &serviceClient{ch}
}

func (c *serviceClient) DumpGbpBridgeDomain(ctx context.Context, in *GbpBridgeDomainDump) (RPCService_DumpGbpBridgeDomainClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGbpBridgeDomainClient{stream}
	return x, nil
}

type RPCService_DumpGbpBridgeDomainClient interface {
	Recv() (*GbpBridgeDomainDetails, error)
}

type serviceClient_DumpGbpBridgeDomainClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGbpBridgeDomainClient) Recv() (*GbpBridgeDomainDetails, error) {
	m := new(GbpBridgeDomainDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpGbpContract(ctx context.Context, in *GbpContractDump) (RPCService_DumpGbpContractClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGbpContractClient{stream}
	return x, nil
}

type RPCService_DumpGbpContractClient interface {
	Recv() (*GbpContractDetails, error)
}

type serviceClient_DumpGbpContractClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGbpContractClient) Recv() (*GbpContractDetails, error) {
	m := new(GbpContractDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpGbpEndpoint(ctx context.Context, in *GbpEndpointDump) (RPCService_DumpGbpEndpointClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGbpEndpointClient{stream}
	return x, nil
}

type RPCService_DumpGbpEndpointClient interface {
	Recv() (*GbpEndpointDetails, error)
}

type serviceClient_DumpGbpEndpointClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGbpEndpointClient) Recv() (*GbpEndpointDetails, error) {
	m := new(GbpEndpointDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpGbpEndpointGroup(ctx context.Context, in *GbpEndpointGroupDump) (RPCService_DumpGbpEndpointGroupClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGbpEndpointGroupClient{stream}
	return x, nil
}

type RPCService_DumpGbpEndpointGroupClient interface {
	Recv() (*GbpEndpointGroupDetails, error)
}

type serviceClient_DumpGbpEndpointGroupClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGbpEndpointGroupClient) Recv() (*GbpEndpointGroupDetails, error) {
	m := new(GbpEndpointGroupDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpGbpExtItf(ctx context.Context, in *GbpExtItfDump) (RPCService_DumpGbpExtItfClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGbpExtItfClient{stream}
	return x, nil
}

type RPCService_DumpGbpExtItfClient interface {
	Recv() (*GbpExtItfDetails, error)
}

type serviceClient_DumpGbpExtItfClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGbpExtItfClient) Recv() (*GbpExtItfDetails, error) {
	m := new(GbpExtItfDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpGbpRecirc(ctx context.Context, in *GbpRecircDump) (RPCService_DumpGbpRecircClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGbpRecircClient{stream}
	return x, nil
}

type RPCService_DumpGbpRecircClient interface {
	Recv() (*GbpRecircDetails, error)
}

type serviceClient_DumpGbpRecircClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGbpRecircClient) Recv() (*GbpRecircDetails, error) {
	m := new(GbpRecircDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpGbpRouteDomain(ctx context.Context, in *GbpRouteDomainDump) (RPCService_DumpGbpRouteDomainClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGbpRouteDomainClient{stream}
	return x, nil
}

type RPCService_DumpGbpRouteDomainClient interface {
	Recv() (*GbpRouteDomainDetails, error)
}

type serviceClient_DumpGbpRouteDomainClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGbpRouteDomainClient) Recv() (*GbpRouteDomainDetails, error) {
	m := new(GbpRouteDomainDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpGbpSubnet(ctx context.Context, in *GbpSubnetDump) (RPCService_DumpGbpSubnetClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGbpSubnetClient{stream}
	return x, nil
}

type RPCService_DumpGbpSubnetClient interface {
	Recv() (*GbpSubnetDetails, error)
}

type serviceClient_DumpGbpSubnetClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGbpSubnetClient) Recv() (*GbpSubnetDetails, error) {
	m := new(GbpSubnetDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpGbpVxlanTunnel(ctx context.Context, in *GbpVxlanTunnelDump) (RPCService_DumpGbpVxlanTunnelClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGbpVxlanTunnelClient{stream}
	return x, nil
}

type RPCService_DumpGbpVxlanTunnelClient interface {
	Recv() (*GbpVxlanTunnelDetails, error)
}

type serviceClient_DumpGbpVxlanTunnelClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGbpVxlanTunnelClient) Recv() (*GbpVxlanTunnelDetails, error) {
	m := new(GbpVxlanTunnelDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) GbpBridgeDomainAdd(ctx context.Context, in *GbpBridgeDomainAdd) (*GbpBridgeDomainAddReply, error) {
	out := new(GbpBridgeDomainAddReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpBridgeDomainDel(ctx context.Context, in *GbpBridgeDomainDel) (*GbpBridgeDomainDelReply, error) {
	out := new(GbpBridgeDomainDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpContractAddDel(ctx context.Context, in *GbpContractAddDel) (*GbpContractAddDelReply, error) {
	out := new(GbpContractAddDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpEndpointAdd(ctx context.Context, in *GbpEndpointAdd) (*GbpEndpointAddReply, error) {
	out := new(GbpEndpointAddReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpEndpointDel(ctx context.Context, in *GbpEndpointDel) (*GbpEndpointDelReply, error) {
	out := new(GbpEndpointDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpEndpointGroupAdd(ctx context.Context, in *GbpEndpointGroupAdd) (*GbpEndpointGroupAddReply, error) {
	out := new(GbpEndpointGroupAddReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpEndpointGroupDel(ctx context.Context, in *GbpEndpointGroupDel) (*GbpEndpointGroupDelReply, error) {
	out := new(GbpEndpointGroupDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpExtItfAddDel(ctx context.Context, in *GbpExtItfAddDel) (*GbpExtItfAddDelReply, error) {
	out := new(GbpExtItfAddDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpRecircAddDel(ctx context.Context, in *GbpRecircAddDel) (*GbpRecircAddDelReply, error) {
	out := new(GbpRecircAddDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpRouteDomainAdd(ctx context.Context, in *GbpRouteDomainAdd) (*GbpRouteDomainAddReply, error) {
	out := new(GbpRouteDomainAddReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpRouteDomainDel(ctx context.Context, in *GbpRouteDomainDel) (*GbpRouteDomainDelReply, error) {
	out := new(GbpRouteDomainDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpSubnetAddDel(ctx context.Context, in *GbpSubnetAddDel) (*GbpSubnetAddDelReply, error) {
	out := new(GbpSubnetAddDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpVxlanTunnelAdd(ctx context.Context, in *GbpVxlanTunnelAdd) (*GbpVxlanTunnelAddReply, error) {
	out := new(GbpVxlanTunnelAddReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GbpVxlanTunnelDel(ctx context.Context, in *GbpVxlanTunnelDel) (*GbpVxlanTunnelDelReply, error) {
	out := new(GbpVxlanTunnelDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion1 // please upgrade the GoVPP api package

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = bytes.NewBuffer
var _ = context.Background
var _ = io.Copy
var _ = strconv.Itoa
var _ = struc.Pack
