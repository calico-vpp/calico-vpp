// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// source: /usr/share/vpp/api/plugins/pot.api.json

/*
Package pot is a generated VPP binary API for 'pot' module.

It consists of:
	  8 messages
	  4 services
*/
package pot

import (
	bytes "bytes"
	context "context"
	api "git.fd.io/govpp.git/api"
	struc "github.com/lunixbochs/struc"
	io "io"
	strconv "strconv"
)

const (
	// ModuleName is the name of this module.
	ModuleName = "pot"
	// APIVersion is the API version of this module.
	APIVersion = "1.0.0"
	// VersionCrc is the CRC of this module.
	VersionCrc = 0x98eccbe7
)

// PotProfileActivate represents VPP binary API message 'pot_profile_activate'.
type PotProfileActivate struct {
	ID          uint8
	ListNameLen uint8 `struc:"sizeof=ListName"`
	ListName    []byte
}

func (*PotProfileActivate) GetMessageName() string {
	return "pot_profile_activate"
}
func (*PotProfileActivate) GetCrcString() string {
	return "eeada566"
}
func (*PotProfileActivate) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// PotProfileActivateReply represents VPP binary API message 'pot_profile_activate_reply'.
type PotProfileActivateReply struct {
	Retval int32
}

func (*PotProfileActivateReply) GetMessageName() string {
	return "pot_profile_activate_reply"
}
func (*PotProfileActivateReply) GetCrcString() string {
	return "e8d4e804"
}
func (*PotProfileActivateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// PotProfileAdd represents VPP binary API message 'pot_profile_add'.
type PotProfileAdd struct {
	ID               uint8
	Validator        uint8
	SecretKey        uint64
	SecretShare      uint64
	Prime            uint64
	MaxBits          uint8
	Lpc              uint64
	PolynomialPublic uint64
	ListNameLen      uint8 `struc:"sizeof=ListName"`
	ListName         []byte
}

func (*PotProfileAdd) GetMessageName() string {
	return "pot_profile_add"
}
func (*PotProfileAdd) GetCrcString() string {
	return "e8f1d058"
}
func (*PotProfileAdd) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// PotProfileAddReply represents VPP binary API message 'pot_profile_add_reply'.
type PotProfileAddReply struct {
	Retval int32
}

func (*PotProfileAddReply) GetMessageName() string {
	return "pot_profile_add_reply"
}
func (*PotProfileAddReply) GetCrcString() string {
	return "e8d4e804"
}
func (*PotProfileAddReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// PotProfileDel represents VPP binary API message 'pot_profile_del'.
type PotProfileDel struct {
	ListNameLen uint8 `struc:"sizeof=ListName"`
	ListName    []byte
}

func (*PotProfileDel) GetMessageName() string {
	return "pot_profile_del"
}
func (*PotProfileDel) GetCrcString() string {
	return "bb100832"
}
func (*PotProfileDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// PotProfileDelReply represents VPP binary API message 'pot_profile_del_reply'.
type PotProfileDelReply struct {
	Retval int32
}

func (*PotProfileDelReply) GetMessageName() string {
	return "pot_profile_del_reply"
}
func (*PotProfileDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*PotProfileDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// PotProfileShowConfigDetails represents VPP binary API message 'pot_profile_show_config_details'.
type PotProfileShowConfigDetails struct {
	Retval           int32
	ID               uint8
	Validator        uint8
	SecretKey        uint64
	SecretShare      uint64
	Prime            uint64
	BitMask          uint64
	Lpc              uint64
	PolynomialPublic uint64
}

func (*PotProfileShowConfigDetails) GetMessageName() string {
	return "pot_profile_show_config_details"
}
func (*PotProfileShowConfigDetails) GetCrcString() string {
	return "b7ce0618"
}
func (*PotProfileShowConfigDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// PotProfileShowConfigDump represents VPP binary API message 'pot_profile_show_config_dump'.
type PotProfileShowConfigDump struct {
	ID uint8
}

func (*PotProfileShowConfigDump) GetMessageName() string {
	return "pot_profile_show_config_dump"
}
func (*PotProfileShowConfigDump) GetCrcString() string {
	return "005b7d59"
}
func (*PotProfileShowConfigDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func init() {
	api.RegisterMessage((*PotProfileActivate)(nil), "pot.PotProfileActivate")
	api.RegisterMessage((*PotProfileActivateReply)(nil), "pot.PotProfileActivateReply")
	api.RegisterMessage((*PotProfileAdd)(nil), "pot.PotProfileAdd")
	api.RegisterMessage((*PotProfileAddReply)(nil), "pot.PotProfileAddReply")
	api.RegisterMessage((*PotProfileDel)(nil), "pot.PotProfileDel")
	api.RegisterMessage((*PotProfileDelReply)(nil), "pot.PotProfileDelReply")
	api.RegisterMessage((*PotProfileShowConfigDetails)(nil), "pot.PotProfileShowConfigDetails")
	api.RegisterMessage((*PotProfileShowConfigDump)(nil), "pot.PotProfileShowConfigDump")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*PotProfileActivate)(nil),
		(*PotProfileActivateReply)(nil),
		(*PotProfileAdd)(nil),
		(*PotProfileAddReply)(nil),
		(*PotProfileDel)(nil),
		(*PotProfileDelReply)(nil),
		(*PotProfileShowConfigDetails)(nil),
		(*PotProfileShowConfigDump)(nil),
	}
}

// RPCService represents RPC service API for pot module.
type RPCService interface {
	DumpPotProfileShowConfig(ctx context.Context, in *PotProfileShowConfigDump) (RPCService_DumpPotProfileShowConfigClient, error)
	PotProfileActivate(ctx context.Context, in *PotProfileActivate) (*PotProfileActivateReply, error)
	PotProfileAdd(ctx context.Context, in *PotProfileAdd) (*PotProfileAddReply, error)
	PotProfileDel(ctx context.Context, in *PotProfileDel) (*PotProfileDelReply, error)
}

type serviceClient struct {
	ch api.Channel
}

func NewServiceClient(ch api.Channel) RPCService {
	return &serviceClient{ch}
}

func (c *serviceClient) DumpPotProfileShowConfig(ctx context.Context, in *PotProfileShowConfigDump) (RPCService_DumpPotProfileShowConfigClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpPotProfileShowConfigClient{stream}
	return x, nil
}

type RPCService_DumpPotProfileShowConfigClient interface {
	Recv() (*PotProfileShowConfigDetails, error)
}

type serviceClient_DumpPotProfileShowConfigClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpPotProfileShowConfigClient) Recv() (*PotProfileShowConfigDetails, error) {
	m := new(PotProfileShowConfigDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) PotProfileActivate(ctx context.Context, in *PotProfileActivate) (*PotProfileActivateReply, error) {
	out := new(PotProfileActivateReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) PotProfileAdd(ctx context.Context, in *PotProfileAdd) (*PotProfileAddReply, error) {
	out := new(PotProfileAddReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) PotProfileDel(ctx context.Context, in *PotProfileDel) (*PotProfileDelReply, error) {
	out := new(PotProfileDelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion1 // please upgrade the GoVPP api package

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = bytes.NewBuffer
var _ = context.Background
var _ = io.Copy
var _ = strconv.Itoa
var _ = struc.Pack
