// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// source: /usr/share/vpp/api/plugins/nsh.api.json

/*
Package nsh is a generated VPP binary API for 'nsh' module.

It consists of:
	  8 messages
	  4 services
*/
package nsh

import (
	bytes "bytes"
	context "context"
	api "git.fd.io/govpp.git/api"
	struc "github.com/lunixbochs/struc"
	io "io"
	strconv "strconv"
)

const (
	// ModuleName is the name of this module.
	ModuleName = "nsh"
	// VersionCrc is the CRC of this module.
	VersionCrc = 0x6de57acf
)

// NshAddDelEntry represents VPP binary API message 'nsh_add_del_entry'.
type NshAddDelEntry struct {
	IsAdd        uint8
	NspNsi       uint32
	MdType       uint8
	VerOC        uint8
	TTL          uint8
	Length       uint8
	NextProtocol uint8
	C1           uint32
	C2           uint32
	C3           uint32
	C4           uint32
	TlvLength    uint8
	Tlv          []byte `struc:"[248]byte"`
}

func (*NshAddDelEntry) GetMessageName() string {
	return "nsh_add_del_entry"
}
func (*NshAddDelEntry) GetCrcString() string {
	return "395ee8fb"
}
func (*NshAddDelEntry) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// NshAddDelEntryReply represents VPP binary API message 'nsh_add_del_entry_reply'.
type NshAddDelEntryReply struct {
	Retval     int32
	EntryIndex uint32
}

func (*NshAddDelEntryReply) GetMessageName() string {
	return "nsh_add_del_entry_reply"
}
func (*NshAddDelEntryReply) GetCrcString() string {
	return "6296a9eb"
}
func (*NshAddDelEntryReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// NshAddDelMap represents VPP binary API message 'nsh_add_del_map'.
type NshAddDelMap struct {
	IsAdd        uint8
	NspNsi       uint32
	MappedNspNsi uint32
	NshAction    uint32
	SwIfIndex    uint32
	RxSwIfIndex  uint32
	NextNode     uint32
}

func (*NshAddDelMap) GetMessageName() string {
	return "nsh_add_del_map"
}
func (*NshAddDelMap) GetCrcString() string {
	return "3af737a1"
}
func (*NshAddDelMap) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// NshAddDelMapReply represents VPP binary API message 'nsh_add_del_map_reply'.
type NshAddDelMapReply struct {
	Retval   int32
	MapIndex uint32
}

func (*NshAddDelMapReply) GetMessageName() string {
	return "nsh_add_del_map_reply"
}
func (*NshAddDelMapReply) GetCrcString() string {
	return "b2b127ef"
}
func (*NshAddDelMapReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// NshEntryDetails represents VPP binary API message 'nsh_entry_details'.
type NshEntryDetails struct {
	EntryIndex   uint32
	NspNsi       uint32
	MdType       uint8
	VerOC        uint8
	TTL          uint8
	Length       uint8
	NextProtocol uint8
	C1           uint32
	C2           uint32
	C3           uint32
	C4           uint32
	TlvLength    uint8
	Tlv          []byte `struc:"[248]byte"`
}

func (*NshEntryDetails) GetMessageName() string {
	return "nsh_entry_details"
}
func (*NshEntryDetails) GetCrcString() string {
	return "046fb556"
}
func (*NshEntryDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// NshEntryDump represents VPP binary API message 'nsh_entry_dump'.
type NshEntryDump struct {
	EntryIndex uint32
}

func (*NshEntryDump) GetMessageName() string {
	return "nsh_entry_dump"
}
func (*NshEntryDump) GetCrcString() string {
	return "cdaf8ccb"
}
func (*NshEntryDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// NshMapDetails represents VPP binary API message 'nsh_map_details'.
type NshMapDetails struct {
	MapIndex     uint32
	NspNsi       uint32
	MappedNspNsi uint32
	NshAction    uint32
	SwIfIndex    uint32
	RxSwIfIndex  uint32
	NextNode     uint32
}

func (*NshMapDetails) GetMessageName() string {
	return "nsh_map_details"
}
func (*NshMapDetails) GetCrcString() string {
	return "a5c4e8fa"
}
func (*NshMapDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// NshMapDump represents VPP binary API message 'nsh_map_dump'.
type NshMapDump struct {
	MapIndex uint32
}

func (*NshMapDump) GetMessageName() string {
	return "nsh_map_dump"
}
func (*NshMapDump) GetCrcString() string {
	return "8fc06b82"
}
func (*NshMapDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func init() {
	api.RegisterMessage((*NshAddDelEntry)(nil), "nsh.NshAddDelEntry")
	api.RegisterMessage((*NshAddDelEntryReply)(nil), "nsh.NshAddDelEntryReply")
	api.RegisterMessage((*NshAddDelMap)(nil), "nsh.NshAddDelMap")
	api.RegisterMessage((*NshAddDelMapReply)(nil), "nsh.NshAddDelMapReply")
	api.RegisterMessage((*NshEntryDetails)(nil), "nsh.NshEntryDetails")
	api.RegisterMessage((*NshEntryDump)(nil), "nsh.NshEntryDump")
	api.RegisterMessage((*NshMapDetails)(nil), "nsh.NshMapDetails")
	api.RegisterMessage((*NshMapDump)(nil), "nsh.NshMapDump")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*NshAddDelEntry)(nil),
		(*NshAddDelEntryReply)(nil),
		(*NshAddDelMap)(nil),
		(*NshAddDelMapReply)(nil),
		(*NshEntryDetails)(nil),
		(*NshEntryDump)(nil),
		(*NshMapDetails)(nil),
		(*NshMapDump)(nil),
	}
}

// RPCService represents RPC service API for nsh module.
type RPCService interface {
	DumpNshEntry(ctx context.Context, in *NshEntryDump) (RPCService_DumpNshEntryClient, error)
	DumpNshMap(ctx context.Context, in *NshMapDump) (RPCService_DumpNshMapClient, error)
	NshAddDelEntry(ctx context.Context, in *NshAddDelEntry) (*NshAddDelEntryReply, error)
	NshAddDelMap(ctx context.Context, in *NshAddDelMap) (*NshAddDelMapReply, error)
}

type serviceClient struct {
	ch api.Channel
}

func NewServiceClient(ch api.Channel) RPCService {
	return &serviceClient{ch}
}

func (c *serviceClient) DumpNshEntry(ctx context.Context, in *NshEntryDump) (RPCService_DumpNshEntryClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpNshEntryClient{stream}
	return x, nil
}

type RPCService_DumpNshEntryClient interface {
	Recv() (*NshEntryDetails, error)
}

type serviceClient_DumpNshEntryClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpNshEntryClient) Recv() (*NshEntryDetails, error) {
	m := new(NshEntryDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpNshMap(ctx context.Context, in *NshMapDump) (RPCService_DumpNshMapClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpNshMapClient{stream}
	return x, nil
}

type RPCService_DumpNshMapClient interface {
	Recv() (*NshMapDetails, error)
}

type serviceClient_DumpNshMapClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpNshMapClient) Recv() (*NshMapDetails, error) {
	m := new(NshMapDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) NshAddDelEntry(ctx context.Context, in *NshAddDelEntry) (*NshAddDelEntryReply, error) {
	out := new(NshAddDelEntryReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) NshAddDelMap(ctx context.Context, in *NshAddDelMap) (*NshAddDelMapReply, error) {
	out := new(NshAddDelMapReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion1 // please upgrade the GoVPP api package

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = bytes.NewBuffer
var _ = context.Background
var _ = io.Copy
var _ = strconv.Itoa
var _ = struc.Pack
