// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// source: /usr/share/vpp/api/core/qos.api.json

/*
Package qos is a generated VPP binary API for 'qos' module.

It consists of:
	  5 enums
	  5 aliases
	 11 types
	  1 union
	 19 messages
	  9 services
*/
package qos

import (
	bytes "bytes"
	context "context"
	api "git.fd.io/govpp.git/api"
	struc "github.com/lunixbochs/struc"
	io "io"
	strconv "strconv"
)

const (
	// ModuleName is the name of this module.
	ModuleName = "qos"
	// APIVersion is the API version of this module.
	APIVersion = "1.1.0"
	// VersionCrc is the CRC of this module.
	VersionCrc = 0x8754a74e
)

// AddressFamily represents VPP binary API enum 'address_family'.
type AddressFamily uint32

const (
	ADDRESS_IP4 AddressFamily = 0
	ADDRESS_IP6 AddressFamily = 1
)

var AddressFamily_name = map[uint32]string{
	0: "ADDRESS_IP4",
	1: "ADDRESS_IP6",
}

var AddressFamily_value = map[string]uint32{
	"ADDRESS_IP4": 0,
	"ADDRESS_IP6": 1,
}

func (x AddressFamily) String() string {
	s, ok := AddressFamily_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IPDscp represents VPP binary API enum 'ip_dscp'.
type IPDscp uint8

const (
	IP_API_DSCP_CS0  IPDscp = 0
	IP_API_DSCP_CS1  IPDscp = 8
	IP_API_DSCP_AF11 IPDscp = 10
	IP_API_DSCP_AF12 IPDscp = 12
	IP_API_DSCP_AF13 IPDscp = 14
	IP_API_DSCP_CS2  IPDscp = 16
	IP_API_DSCP_AF21 IPDscp = 18
	IP_API_DSCP_AF22 IPDscp = 20
	IP_API_DSCP_AF23 IPDscp = 22
	IP_API_DSCP_CS3  IPDscp = 24
	IP_API_DSCP_AF31 IPDscp = 26
	IP_API_DSCP_AF32 IPDscp = 28
	IP_API_DSCP_AF33 IPDscp = 30
	IP_API_DSCP_CS4  IPDscp = 32
	IP_API_DSCP_AF41 IPDscp = 34
	IP_API_DSCP_AF42 IPDscp = 36
	IP_API_DSCP_AF43 IPDscp = 38
	IP_API_DSCP_CS5  IPDscp = 40
	IP_API_DSCP_EF   IPDscp = 46
	IP_API_DSCP_CS6  IPDscp = 48
	IP_API_DSCP_CS7  IPDscp = 50
)

var IPDscp_name = map[uint8]string{
	0:  "IP_API_DSCP_CS0",
	8:  "IP_API_DSCP_CS1",
	10: "IP_API_DSCP_AF11",
	12: "IP_API_DSCP_AF12",
	14: "IP_API_DSCP_AF13",
	16: "IP_API_DSCP_CS2",
	18: "IP_API_DSCP_AF21",
	20: "IP_API_DSCP_AF22",
	22: "IP_API_DSCP_AF23",
	24: "IP_API_DSCP_CS3",
	26: "IP_API_DSCP_AF31",
	28: "IP_API_DSCP_AF32",
	30: "IP_API_DSCP_AF33",
	32: "IP_API_DSCP_CS4",
	34: "IP_API_DSCP_AF41",
	36: "IP_API_DSCP_AF42",
	38: "IP_API_DSCP_AF43",
	40: "IP_API_DSCP_CS5",
	46: "IP_API_DSCP_EF",
	48: "IP_API_DSCP_CS6",
	50: "IP_API_DSCP_CS7",
}

var IPDscp_value = map[string]uint8{
	"IP_API_DSCP_CS0":  0,
	"IP_API_DSCP_CS1":  8,
	"IP_API_DSCP_AF11": 10,
	"IP_API_DSCP_AF12": 12,
	"IP_API_DSCP_AF13": 14,
	"IP_API_DSCP_CS2":  16,
	"IP_API_DSCP_AF21": 18,
	"IP_API_DSCP_AF22": 20,
	"IP_API_DSCP_AF23": 22,
	"IP_API_DSCP_CS3":  24,
	"IP_API_DSCP_AF31": 26,
	"IP_API_DSCP_AF32": 28,
	"IP_API_DSCP_AF33": 30,
	"IP_API_DSCP_CS4":  32,
	"IP_API_DSCP_AF41": 34,
	"IP_API_DSCP_AF42": 36,
	"IP_API_DSCP_AF43": 38,
	"IP_API_DSCP_CS5":  40,
	"IP_API_DSCP_EF":   46,
	"IP_API_DSCP_CS6":  48,
	"IP_API_DSCP_CS7":  50,
}

func (x IPDscp) String() string {
	s, ok := IPDscp_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IPEcn represents VPP binary API enum 'ip_ecn'.
type IPEcn uint8

const (
	IP_API_ECN_NONE IPEcn = 0
	IP_API_ECN_ECT0 IPEcn = 1
	IP_API_ECN_ECT1 IPEcn = 2
	IP_API_ECN_CE   IPEcn = 3
)

var IPEcn_name = map[uint8]string{
	0: "IP_API_ECN_NONE",
	1: "IP_API_ECN_ECT0",
	2: "IP_API_ECN_ECT1",
	3: "IP_API_ECN_CE",
}

var IPEcn_value = map[string]uint8{
	"IP_API_ECN_NONE": 0,
	"IP_API_ECN_ECT0": 1,
	"IP_API_ECN_ECT1": 2,
	"IP_API_ECN_CE":   3,
}

func (x IPEcn) String() string {
	s, ok := IPEcn_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IPProto represents VPP binary API enum 'ip_proto'.
type IPProto uint32

const (
	IP_API_PROTO_HOPOPT   IPProto = 0
	IP_API_PROTO_ICMP     IPProto = 1
	IP_API_PROTO_IGMP     IPProto = 2
	IP_API_PROTO_TCP      IPProto = 6
	IP_API_PROTO_UDP      IPProto = 17
	IP_API_PROTO_GRE      IPProto = 47
	IP_API_PROTO_AH       IPProto = 50
	IP_API_PROTO_ESP      IPProto = 51
	IP_API_PROTO_EIGRP    IPProto = 88
	IP_API_PROTO_OSPF     IPProto = 89
	IP_API_PROTO_SCTP     IPProto = 132
	IP_API_PROTO_RESERVED IPProto = 255
)

var IPProto_name = map[uint32]string{
	0:   "IP_API_PROTO_HOPOPT",
	1:   "IP_API_PROTO_ICMP",
	2:   "IP_API_PROTO_IGMP",
	6:   "IP_API_PROTO_TCP",
	17:  "IP_API_PROTO_UDP",
	47:  "IP_API_PROTO_GRE",
	50:  "IP_API_PROTO_AH",
	51:  "IP_API_PROTO_ESP",
	88:  "IP_API_PROTO_EIGRP",
	89:  "IP_API_PROTO_OSPF",
	132: "IP_API_PROTO_SCTP",
	255: "IP_API_PROTO_RESERVED",
}

var IPProto_value = map[string]uint32{
	"IP_API_PROTO_HOPOPT":   0,
	"IP_API_PROTO_ICMP":     1,
	"IP_API_PROTO_IGMP":     2,
	"IP_API_PROTO_TCP":      6,
	"IP_API_PROTO_UDP":      17,
	"IP_API_PROTO_GRE":      47,
	"IP_API_PROTO_AH":       50,
	"IP_API_PROTO_ESP":      51,
	"IP_API_PROTO_EIGRP":    88,
	"IP_API_PROTO_OSPF":     89,
	"IP_API_PROTO_SCTP":     132,
	"IP_API_PROTO_RESERVED": 255,
}

func (x IPProto) String() string {
	s, ok := IPProto_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// QosSource represents VPP binary API enum 'qos_source'.
type QosSource uint8

const (
	QOS_API_SOURCE_EXT  QosSource = 0
	QOS_API_SOURCE_VLAN QosSource = 1
	QOS_API_SOURCE_MPLS QosSource = 2
	QOS_API_SOURCE_IP   QosSource = 3
)

var QosSource_name = map[uint8]string{
	0: "QOS_API_SOURCE_EXT",
	1: "QOS_API_SOURCE_VLAN",
	2: "QOS_API_SOURCE_MPLS",
	3: "QOS_API_SOURCE_IP",
}

var QosSource_value = map[string]uint8{
	"QOS_API_SOURCE_EXT":  0,
	"QOS_API_SOURCE_VLAN": 1,
	"QOS_API_SOURCE_MPLS": 2,
	"QOS_API_SOURCE_IP":   3,
}

func (x QosSource) String() string {
	s, ok := QosSource_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// AddressWithPrefix represents VPP binary API alias 'address_with_prefix'.
type AddressWithPrefix Prefix

// IP4Address represents VPP binary API alias 'ip4_address'.
type IP4Address [4]uint8

// IP4AddressWithPrefix represents VPP binary API alias 'ip4_address_with_prefix'.
type IP4AddressWithPrefix IP4Prefix

// IP6Address represents VPP binary API alias 'ip6_address'.
type IP6Address [16]uint8

// IP6AddressWithPrefix represents VPP binary API alias 'ip6_address_with_prefix'.
type IP6AddressWithPrefix IP6Prefix

// Address represents VPP binary API type 'address'.
type Address struct {
	Af AddressFamily
	Un AddressUnion
}

func (*Address) GetTypeName() string {
	return "address"
}

// IP4Prefix represents VPP binary API type 'ip4_prefix'.
type IP4Prefix struct {
	Address IP4Address
	Len     uint8
}

func (*IP4Prefix) GetTypeName() string {
	return "ip4_prefix"
}

// IP6Prefix represents VPP binary API type 'ip6_prefix'.
type IP6Prefix struct {
	Address IP6Address
	Len     uint8
}

func (*IP6Prefix) GetTypeName() string {
	return "ip6_prefix"
}

// Mprefix represents VPP binary API type 'mprefix'.
type Mprefix struct {
	Af               AddressFamily
	GrpAddressLength uint16
	GrpAddress       AddressUnion
	SrcAddress       AddressUnion
}

func (*Mprefix) GetTypeName() string {
	return "mprefix"
}

// Prefix represents VPP binary API type 'prefix'.
type Prefix struct {
	Address Address
	Len     uint8
}

func (*Prefix) GetTypeName() string {
	return "prefix"
}

// PrefixMatcher represents VPP binary API type 'prefix_matcher'.
type PrefixMatcher struct {
	Le uint8
	Ge uint8
}

func (*PrefixMatcher) GetTypeName() string {
	return "prefix_matcher"
}

// QosEgressMap represents VPP binary API type 'qos_egress_map'.
type QosEgressMap struct {
	ID   uint32
	Rows []QosEgressMapRow `struc:"[4]QosEgressMapRow"`
}

func (*QosEgressMap) GetTypeName() string {
	return "qos_egress_map"
}

// QosEgressMapRow represents VPP binary API type 'qos_egress_map_row'.
type QosEgressMapRow struct {
	Outputs []byte `struc:"[256]byte"`
}

func (*QosEgressMapRow) GetTypeName() string {
	return "qos_egress_map_row"
}

// QosMark represents VPP binary API type 'qos_mark'.
type QosMark struct {
	SwIfIndex    uint32
	MapID        uint32
	OutputSource QosSource
}

func (*QosMark) GetTypeName() string {
	return "qos_mark"
}

// QosRecord represents VPP binary API type 'qos_record'.
type QosRecord struct {
	SwIfIndex   uint32
	InputSource QosSource
}

func (*QosRecord) GetTypeName() string {
	return "qos_record"
}

// QosStore represents VPP binary API type 'qos_store'.
type QosStore struct {
	SwIfIndex   uint32
	InputSource QosSource
	Value       uint8
}

func (*QosStore) GetTypeName() string {
	return "qos_store"
}

// AddressUnion represents VPP binary API union 'address_union'.
type AddressUnion struct {
	XXX_UnionData [16]byte
}

func (*AddressUnion) GetTypeName() string {
	return "address_union"
}

func AddressUnionIP4(a IP4Address) (u AddressUnion) {
	u.SetIP4(a)
	return
}
func (u *AddressUnion) SetIP4(a IP4Address) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.XXX_UnionData[:], b.Bytes())
}
func (u *AddressUnion) GetIP4() (a IP4Address) {
	var b = bytes.NewReader(u.XXX_UnionData[:])
	struc.Unpack(b, &a)
	return
}

func AddressUnionIP6(a IP6Address) (u AddressUnion) {
	u.SetIP6(a)
	return
}
func (u *AddressUnion) SetIP6(a IP6Address) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.XXX_UnionData[:], b.Bytes())
}
func (u *AddressUnion) GetIP6() (a IP6Address) {
	var b = bytes.NewReader(u.XXX_UnionData[:])
	struc.Unpack(b, &a)
	return
}

// QosEgressMapDelete represents VPP binary API message 'qos_egress_map_delete'.
type QosEgressMapDelete struct {
	ID uint32
}

func (*QosEgressMapDelete) GetMessageName() string {
	return "qos_egress_map_delete"
}
func (*QosEgressMapDelete) GetCrcString() string {
	return "3a91bde5"
}
func (*QosEgressMapDelete) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// QosEgressMapDeleteReply represents VPP binary API message 'qos_egress_map_delete_reply'.
type QosEgressMapDeleteReply struct {
	Retval int32
}

func (*QosEgressMapDeleteReply) GetMessageName() string {
	return "qos_egress_map_delete_reply"
}
func (*QosEgressMapDeleteReply) GetCrcString() string {
	return "e8d4e804"
}
func (*QosEgressMapDeleteReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// QosEgressMapDetails represents VPP binary API message 'qos_egress_map_details'.
type QosEgressMapDetails struct {
	Map QosEgressMap
}

func (*QosEgressMapDetails) GetMessageName() string {
	return "qos_egress_map_details"
}
func (*QosEgressMapDetails) GetCrcString() string {
	return "46c5653c"
}
func (*QosEgressMapDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// QosEgressMapDump represents VPP binary API message 'qos_egress_map_dump'.
type QosEgressMapDump struct{}

func (*QosEgressMapDump) GetMessageName() string {
	return "qos_egress_map_dump"
}
func (*QosEgressMapDump) GetCrcString() string {
	return "51077d14"
}
func (*QosEgressMapDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// QosEgressMapUpdate represents VPP binary API message 'qos_egress_map_update'.
type QosEgressMapUpdate struct {
	Map QosEgressMap
}

func (*QosEgressMapUpdate) GetMessageName() string {
	return "qos_egress_map_update"
}
func (*QosEgressMapUpdate) GetCrcString() string {
	return "6d1c065f"
}
func (*QosEgressMapUpdate) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// QosEgressMapUpdateReply represents VPP binary API message 'qos_egress_map_update_reply'.
type QosEgressMapUpdateReply struct {
	Retval int32
}

func (*QosEgressMapUpdateReply) GetMessageName() string {
	return "qos_egress_map_update_reply"
}
func (*QosEgressMapUpdateReply) GetCrcString() string {
	return "e8d4e804"
}
func (*QosEgressMapUpdateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// QosMarkDetails represents VPP binary API message 'qos_mark_details'.
type QosMarkDetails struct {
	Mark QosMark
}

func (*QosMarkDetails) GetMessageName() string {
	return "qos_mark_details"
}
func (*QosMarkDetails) GetCrcString() string {
	return "89fe81a9"
}
func (*QosMarkDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// QosMarkDetailsReply represents VPP binary API message 'qos_mark_details_reply'.
type QosMarkDetailsReply struct {
	Retval int32
}

func (*QosMarkDetailsReply) GetMessageName() string {
	return "qos_mark_details_reply"
}
func (*QosMarkDetailsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*QosMarkDetailsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// QosMarkDump represents VPP binary API message 'qos_mark_dump'.
type QosMarkDump struct {
	SwIfIndex uint32
}

func (*QosMarkDump) GetMessageName() string {
	return "qos_mark_dump"
}
func (*QosMarkDump) GetCrcString() string {
	return "529cb13f"
}
func (*QosMarkDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// QosMarkEnableDisable represents VPP binary API message 'qos_mark_enable_disable'.
type QosMarkEnableDisable struct {
	Enable uint8
	Mark   QosMark
}

func (*QosMarkEnableDisable) GetMessageName() string {
	return "qos_mark_enable_disable"
}
func (*QosMarkEnableDisable) GetCrcString() string {
	return "a7f849c8"
}
func (*QosMarkEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// QosMarkEnableDisableReply represents VPP binary API message 'qos_mark_enable_disable_reply'.
type QosMarkEnableDisableReply struct {
	Retval int32
}

func (*QosMarkEnableDisableReply) GetMessageName() string {
	return "qos_mark_enable_disable_reply"
}
func (*QosMarkEnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*QosMarkEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// QosRecordDetails represents VPP binary API message 'qos_record_details'.
type QosRecordDetails struct {
	Record QosRecord
}

func (*QosRecordDetails) GetMessageName() string {
	return "qos_record_details"
}
func (*QosRecordDetails) GetCrcString() string {
	return "01e537d6"
}
func (*QosRecordDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// QosRecordDump represents VPP binary API message 'qos_record_dump'.
type QosRecordDump struct{}

func (*QosRecordDump) GetMessageName() string {
	return "qos_record_dump"
}
func (*QosRecordDump) GetCrcString() string {
	return "51077d14"
}
func (*QosRecordDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// QosRecordEnableDisable represents VPP binary API message 'qos_record_enable_disable'.
type QosRecordEnableDisable struct {
	Enable uint8
	Record QosRecord
}

func (*QosRecordEnableDisable) GetMessageName() string {
	return "qos_record_enable_disable"
}
func (*QosRecordEnableDisable) GetCrcString() string {
	return "0e9320b1"
}
func (*QosRecordEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// QosRecordEnableDisableReply represents VPP binary API message 'qos_record_enable_disable_reply'.
type QosRecordEnableDisableReply struct {
	Retval int32
}

func (*QosRecordEnableDisableReply) GetMessageName() string {
	return "qos_record_enable_disable_reply"
}
func (*QosRecordEnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*QosRecordEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// QosStoreDetails represents VPP binary API message 'qos_store_details'.
type QosStoreDetails struct {
	Store QosStore
}

func (*QosStoreDetails) GetMessageName() string {
	return "qos_store_details"
}
func (*QosStoreDetails) GetCrcString() string {
	return "85db0b5a"
}
func (*QosStoreDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// QosStoreDump represents VPP binary API message 'qos_store_dump'.
type QosStoreDump struct{}

func (*QosStoreDump) GetMessageName() string {
	return "qos_store_dump"
}
func (*QosStoreDump) GetCrcString() string {
	return "51077d14"
}
func (*QosStoreDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// QosStoreEnableDisable represents VPP binary API message 'qos_store_enable_disable'.
type QosStoreEnableDisable struct {
	Enable uint8
	Store  QosStore
}

func (*QosStoreEnableDisable) GetMessageName() string {
	return "qos_store_enable_disable"
}
func (*QosStoreEnableDisable) GetCrcString() string {
	return "371eeb27"
}
func (*QosStoreEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// QosStoreEnableDisableReply represents VPP binary API message 'qos_store_enable_disable_reply'.
type QosStoreEnableDisableReply struct {
	Retval int32
}

func (*QosStoreEnableDisableReply) GetMessageName() string {
	return "qos_store_enable_disable_reply"
}
func (*QosStoreEnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*QosStoreEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func init() {
	api.RegisterMessage((*QosEgressMapDelete)(nil), "qos.QosEgressMapDelete")
	api.RegisterMessage((*QosEgressMapDeleteReply)(nil), "qos.QosEgressMapDeleteReply")
	api.RegisterMessage((*QosEgressMapDetails)(nil), "qos.QosEgressMapDetails")
	api.RegisterMessage((*QosEgressMapDump)(nil), "qos.QosEgressMapDump")
	api.RegisterMessage((*QosEgressMapUpdate)(nil), "qos.QosEgressMapUpdate")
	api.RegisterMessage((*QosEgressMapUpdateReply)(nil), "qos.QosEgressMapUpdateReply")
	api.RegisterMessage((*QosMarkDetails)(nil), "qos.QosMarkDetails")
	api.RegisterMessage((*QosMarkDetailsReply)(nil), "qos.QosMarkDetailsReply")
	api.RegisterMessage((*QosMarkDump)(nil), "qos.QosMarkDump")
	api.RegisterMessage((*QosMarkEnableDisable)(nil), "qos.QosMarkEnableDisable")
	api.RegisterMessage((*QosMarkEnableDisableReply)(nil), "qos.QosMarkEnableDisableReply")
	api.RegisterMessage((*QosRecordDetails)(nil), "qos.QosRecordDetails")
	api.RegisterMessage((*QosRecordDump)(nil), "qos.QosRecordDump")
	api.RegisterMessage((*QosRecordEnableDisable)(nil), "qos.QosRecordEnableDisable")
	api.RegisterMessage((*QosRecordEnableDisableReply)(nil), "qos.QosRecordEnableDisableReply")
	api.RegisterMessage((*QosStoreDetails)(nil), "qos.QosStoreDetails")
	api.RegisterMessage((*QosStoreDump)(nil), "qos.QosStoreDump")
	api.RegisterMessage((*QosStoreEnableDisable)(nil), "qos.QosStoreEnableDisable")
	api.RegisterMessage((*QosStoreEnableDisableReply)(nil), "qos.QosStoreEnableDisableReply")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*QosEgressMapDelete)(nil),
		(*QosEgressMapDeleteReply)(nil),
		(*QosEgressMapDetails)(nil),
		(*QosEgressMapDump)(nil),
		(*QosEgressMapUpdate)(nil),
		(*QosEgressMapUpdateReply)(nil),
		(*QosMarkDetails)(nil),
		(*QosMarkDetailsReply)(nil),
		(*QosMarkDump)(nil),
		(*QosMarkEnableDisable)(nil),
		(*QosMarkEnableDisableReply)(nil),
		(*QosRecordDetails)(nil),
		(*QosRecordDump)(nil),
		(*QosRecordEnableDisable)(nil),
		(*QosRecordEnableDisableReply)(nil),
		(*QosStoreDetails)(nil),
		(*QosStoreDump)(nil),
		(*QosStoreEnableDisable)(nil),
		(*QosStoreEnableDisableReply)(nil),
	}
}

// RPCService represents RPC service API for qos module.
type RPCService interface {
	DumpQosEgressMap(ctx context.Context, in *QosEgressMapDump) (RPCService_DumpQosEgressMapClient, error)
	DumpQosMark(ctx context.Context, in *QosMarkDump) (RPCService_DumpQosMarkClient, error)
	DumpQosRecord(ctx context.Context, in *QosRecordDump) (RPCService_DumpQosRecordClient, error)
	DumpQosStore(ctx context.Context, in *QosStoreDump) (RPCService_DumpQosStoreClient, error)
	QosEgressMapDelete(ctx context.Context, in *QosEgressMapDelete) (*QosEgressMapDeleteReply, error)
	QosEgressMapUpdate(ctx context.Context, in *QosEgressMapUpdate) (*QosEgressMapUpdateReply, error)
	QosMarkEnableDisable(ctx context.Context, in *QosMarkEnableDisable) (*QosMarkEnableDisableReply, error)
	QosRecordEnableDisable(ctx context.Context, in *QosRecordEnableDisable) (*QosRecordEnableDisableReply, error)
	QosStoreEnableDisable(ctx context.Context, in *QosStoreEnableDisable) (*QosStoreEnableDisableReply, error)
}

type serviceClient struct {
	ch api.Channel
}

func NewServiceClient(ch api.Channel) RPCService {
	return &serviceClient{ch}
}

func (c *serviceClient) DumpQosEgressMap(ctx context.Context, in *QosEgressMapDump) (RPCService_DumpQosEgressMapClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpQosEgressMapClient{stream}
	return x, nil
}

type RPCService_DumpQosEgressMapClient interface {
	Recv() (*QosEgressMapDetails, error)
}

type serviceClient_DumpQosEgressMapClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpQosEgressMapClient) Recv() (*QosEgressMapDetails, error) {
	m := new(QosEgressMapDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpQosMark(ctx context.Context, in *QosMarkDump) (RPCService_DumpQosMarkClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpQosMarkClient{stream}
	return x, nil
}

type RPCService_DumpQosMarkClient interface {
	Recv() (*QosMarkDetails, error)
}

type serviceClient_DumpQosMarkClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpQosMarkClient) Recv() (*QosMarkDetails, error) {
	m := new(QosMarkDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpQosRecord(ctx context.Context, in *QosRecordDump) (RPCService_DumpQosRecordClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpQosRecordClient{stream}
	return x, nil
}

type RPCService_DumpQosRecordClient interface {
	Recv() (*QosRecordDetails, error)
}

type serviceClient_DumpQosRecordClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpQosRecordClient) Recv() (*QosRecordDetails, error) {
	m := new(QosRecordDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpQosStore(ctx context.Context, in *QosStoreDump) (RPCService_DumpQosStoreClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpQosStoreClient{stream}
	return x, nil
}

type RPCService_DumpQosStoreClient interface {
	Recv() (*QosStoreDetails, error)
}

type serviceClient_DumpQosStoreClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpQosStoreClient) Recv() (*QosStoreDetails, error) {
	m := new(QosStoreDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) QosEgressMapDelete(ctx context.Context, in *QosEgressMapDelete) (*QosEgressMapDeleteReply, error) {
	out := new(QosEgressMapDeleteReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) QosEgressMapUpdate(ctx context.Context, in *QosEgressMapUpdate) (*QosEgressMapUpdateReply, error) {
	out := new(QosEgressMapUpdateReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) QosMarkEnableDisable(ctx context.Context, in *QosMarkEnableDisable) (*QosMarkEnableDisableReply, error) {
	out := new(QosMarkEnableDisableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) QosRecordEnableDisable(ctx context.Context, in *QosRecordEnableDisable) (*QosRecordEnableDisableReply, error) {
	out := new(QosRecordEnableDisableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) QosStoreEnableDisable(ctx context.Context, in *QosStoreEnableDisable) (*QosStoreEnableDisableReply, error) {
	out := new(QosStoreEnableDisableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion1 // please upgrade the GoVPP api package

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = bytes.NewBuffer
var _ = context.Background
var _ = io.Copy
var _ = strconv.Itoa
var _ = struc.Pack
